{"version":3,"sources":["utils.js","GameState.js","constants.js","components/Tile.js","components/Square.js","components/Board.js","components/TileBench.js","components/GameArea.js","components/GithubFooter.js","components/ValidationModal.js","components/HelpDialog.js","views/ToolBarView.js","views/GameButtons.js","views/GameView.js","views/AppView.js","App.js","index.js"],"names":["Array","prototype","swap","a","b","this","length","temp","range","n","from","x","i","matrix","y","rows","columns","map","row","slice","observer","letters","emitChange","resetTiles","tiles","getRandomInt","max","Math","floor","random","generateRandomLetters","charAt","createTiles","newLetters","tempTiles","forEach","letter","id","String","getNeighbors","allTiles","tile","upNeighbor","downNeighbor","rightNeighbor","leftNeighbor","tempTile","getWordDown","down","getWordRight","right","getAllWords","words","console","log","up","left","word","push","ItemTypes","Tile","props","useDrag","type","item","collect","monitor","isDragging","drag","useDrop","accept","drop","fromID","toID","fromX","fromY","toX","toY","swapTile","isOver","Box","sx","width","height","background","cursor","borderRadius","ref","node","Typography","variant","position","color","fontSize","lineHeight","textAlign","fontWeight","TileBenchSquare","moveTile","style","backgroundColor","boxShadow","Board","squares","rowIndex","tempRow","index","element","W","Stack","spacing","direction","justifyContent","alignItems","renderBoardSquares","TileBench","GameArea","Container","disableGutters","maxWidth","component","pt","pb","GithubFooter","borderTop","theme","mt","py","align","onClick","event","window","open","opacity","ValidationModal","Modal","onClose","handleClose","BackdropProps","justify","alignContent","top","transform","bgcolor","border","p","Grid","container","xs","foundWordsDivs","HelpDialog","Dialog","DialogTitle","m","IconButton","palette","grey","DialogContent","Divider","gutterBottom","Link","href","target","ToolBarView","useState","helpOpen","setHelpOpen","handleHelpClose","borderBottom","md","size","noWrap","GameButtons","shuffle","Object","values","filter","spots","keys","sort","shuffledSpots","pop","shuffleTiles","setTiles","validate","some","alert","examinedTiles","countConnect","includes","areAllConnected","checkedWords","Words","hasOwnProperty","valid","setFoundWords","handleValidationOpen","Button","createNewGame","every","setTilesBackToBench","GameView","useEffect","o","observe","newPos","React","validationOpen","setValidationOpen","foundWords","Fragment","GlobalStyles","styles","ul","margin","padding","listStyle","CssBaseline","AppView","DndProvider","backend","HTML5Backend","App","path","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.87a82d01.chunk.js","sourcesContent":["/**\n * Array.prototype.swap\n * Rearrange an array to swap the positions of two elements.\n * @param {Number} a - the index of the first element to swap.\n * @param {Number} b - the index of the second element to swap.\n * @returns {Array}\n * @example\n * // returns [ 'a', 'c', 'b' ]\n * [ 'a', 'b', 'c' ].swap(1, 2)\n */\n Array.prototype.swap = function (a, b) {\n  if ( b >= this.length || b < 0 ) return this;\n\n  // Temporary variable to hold data while we juggle\n  let temp = this[a];\n  this[a] = this[b];\n  this[b] = temp;\n  return this;\n};\n\n/**\n * Array.range\n * Create a new array of length n, where the elements are numbers\n * from 0 to n - 1.\n * @param {Number} n - the desired length of the range.\n * @returns {Array}\n * @example\n * // returns [ 0, 1, 2, 3 ]\n * Array.range(4);\n */\nArray.range = n => Array.from(new Array(n), (x,i) => i);\n\n/**\n * Array.matrix\n * Create a new two-dimensional array, where each element is its own index.\n * @param {Number} x - the desired number of columns (possible x values)\n * @param {Number} y - the desired number of rows (possible y values)\n * @returns {Array}\n * @example\n * // returns [\n * //   [ 0, 1, 2 ],\n * //   [ 0, 1, 2 ]\n * // ]\n * Array.matrix(3, 2);\n */\nArray.matrix = (x, y) => {\n  const rows = Array.range(y);\n  const columns = Array.range(x);\n  return rows.map( (row, i) => columns.slice() );\n}","import Words from './words.json'\n\nlet letters = {}\nlet observer;\n\n/**\n  PROPOGATE CHANGES\n*/\n\nfunction emitChange() {\n  observer(letters)\n}\n\nexport function observe(o, tiles) {\n  observer = o\n  letters = tiles\n}\n\nexport function moveTile(toX, toY, item) {\n  letters[item.id] = {\n    ...letters[item.id],\n    x: toX,\n    y: toY,\n  }\n  emitChange();\n}\n\nexport function swapTile(fromID, toID) {\n  let fromX = letters[fromID].x;\n  let fromY = letters[fromID].y;\n\n  let toX = letters[toID].x;\n  let toY = letters[toID].y;\n\n  letters[fromID] = {\n    ...letters[fromID],\n    x: toX,\n    y: toY\n  }\n\n  letters[toID] = {\n    ...letters[toID],\n    x: fromX,\n    y: fromY\n  }\n  emitChange()\n}\n\nexport function canDropTile(squareX, squareY, item) {\n  let allStartingSpot = Object.values(letters).every(tile => tile.y === 0)\n\n  let nextToExistingLetter = false\n  Object.values(letters).forEach(tile => {\n    if (tile.y !== 0 && tile.id !== item.id && ((Math.abs(tile.x - squareX) === 1 &&  Math.abs(tile.y - squareY) === 0) || (Math.abs(tile.y - squareY) === 1 && Math.abs(tile.x - squareX) === 0))) {\n      nextToExistingLetter = true\n    }\n  })\n\n\n  let [tile, up, down, left, right] = getNeighborsById(Object.values(letters), item.id);\n  let connectingPiece = (((up && down) || (left && right)) && tile.y !== 0);\n\n  return (allStartingSpot || nextToExistingLetter) && !connectingPiece\n}\n\nexport function resetTiles(tiles) {\n    letters = tiles\n}\n\n/*\n  GENERATE RANDOM LETTERS\n*/\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\nexport function generateRandomLetters() {\n  \n  let one = \"CCDTBJ\".charAt(getRandomInt(6))\n  let two = \"XZBNSK\".charAt(getRandomInt(6))\n  let three = \"YMLBML\".charAt(getRandomInt(6))\n  let four = \"ONIOIY\".charAt(getRandomInt(6))\n  let five = \"MCCTTS\".charAt(getRandomInt(6))\n  let six = \"HPTHTW\".charAt(getRandomInt (6))\n  let seven = \"RLLFDW\".charAt(getRandomInt(6))\n  let eight = \"EAOUUI\".charAt(getRandomInt(6))\n  let nine = \"RHNHNR\".charAt(getRandomInt(6))\n  let ten = \"OEAEAO\".charAt(getRandomInt(6))\n  let eleven = \"KPFVPG\".charAt(getRandomInt(6))\n  let twelve = \"GDGRRL\".charAt(getRandomInt (6))\n\n  let letters = [one, two, three, four, five, six, seven, eight, nine, ten, eleven, twelve]\n\n  return letters\n}\n\nexport function createTiles(newLetters) {\n  let tempTiles = {}\n  newLetters.forEach((letter, i) => {\n    tempTiles[i] = {\n      x: i,\n      y: 0,\n      letter,\n      id: String(i)\n    }\n  })\n  return tempTiles\n}\n\nexport function shuffleTiles(shuffledSpots) {\n  let tempTiles = {}\n  for (let i = 0; i < Object.values(letters).length; i++) {\n    tempTiles[i] = {\n      ...letters[i]\n    }\n\n    if (tempTiles[i].y === 0) {\n      tempTiles[i].x = shuffledSpots.pop()\n    }\n\n  }\n\n  return tempTiles\n}\n\n/*\n  FIND LETTERS IN GRID\n*/\nexport function areAllConnected(tiles) {\n  let examinedTiles = []\n\n  let countConnect = (function (tile) {\n    const [up, down, left, right] = getNeighbors(tiles, tile)\n    console.log(`Looking at tile ${tile.letter}`)\n    if (up && !examinedTiles.includes(up.id) ) {\n      examinedTiles.push(up.id)\n      countConnect(up)\n    }\n    if (down && !examinedTiles.includes(down.id)) {\n      examinedTiles.push(down.id)\n      countConnect(down)\n    }\n    if (left && !examinedTiles.includes(left.id)) {\n      examinedTiles.push(left.id)\n      countConnect(left)\n    }\n    if (right && !examinedTiles.includes(right.id)) {\n      examinedTiles.push(right.id)\n      countConnect(right)\n    }\n  })\n\n  countConnect(tiles[0])\n\n  return examinedTiles.length === 12\n}\n\nfunction getNeighborsById(allTiles, id) {\n  let tile = allTiles.filter(t => t.id === id)[0]\n  return [tile, ...getNeighbors(allTiles, tile)]\n}\n\nfunction getNeighbors(allTiles, tile) {\n  let upNeighbor = null;\n  let downNeighbor = null;\n  let rightNeighbor = null;\n  let leftNeighbor = null;\n  allTiles.forEach(tempTile => {\n    \n    if (tempTile.x === tile.x && tempTile.y - tile.y === -1) {\n      upNeighbor = tempTile\n    }\n    \n    if (tempTile.x === tile.x && tempTile.y - tile.y === 1) {\n      downNeighbor = tempTile\n    }\n    \n    if (tempTile.x - tile.x === 1 && tempTile.y  ===tile.y) {\n      rightNeighbor = tempTile\n    }\n    \n    if (tempTile.x - tile.x === -1 && tempTile.y  ===tile.y) {\n      leftNeighbor = tempTile\n    }\n  })\n  return [upNeighbor, downNeighbor, leftNeighbor, rightNeighbor];\n}\n\nfunction getWordDown(allTiles, tile) {\n  const [, down, , ] = getNeighbors(allTiles, tile)\n  if (!down) {\n    return tile.letter\n  }\n  return `${tile.letter}${getWordDown(allTiles, down)}`\n}\n\nfunction getWordRight(allTiles, tile) {\n  const [, , , right] = getNeighbors(allTiles, tile)\n  if (!right) {\n    return tile.letter\n  }\n  return `${tile.letter}${getWordRight(allTiles, right)}`\n}\n\n\nexport function getAllWords(allTiles) {\n  let words = []\n  console.log(\"IN GET ALL WORDS\", allTiles)\n\n  allTiles.forEach(tile => {\n    const [up, down, left, right] = getNeighbors(allTiles, tile)\n\n    if (down && !up) {\n      console.log(`Found starting letter ${tile.letter}, getting word in DOWN direction`)\n      let word = getWordDown(allTiles, tile)\n      words.push(word)\n      console.log(`FOUND WORD ${word}`)\n    }\n\n    if (right && !left) {\n      console.log(`Found starting letter ${tile.letter}, getting word in RIGHT direction`)\n      let word = getWordRight(allTiles, tile)\n      words.push(word)\n      console.log(`FOUND WORD ${word}`)\n    }\n  })\n  return words\n}\n\n/*\n  SOLVE\n*/\nexport function generateMatches(letters) {\n\n  let allPossible = getPermutationsAllLengths(letters)\n  let results = [];\n\n  for (let i = 0; i < allPossible.length; i++) {\n    if (Words.hasOwnProperty(allPossible[i].toUpperCase())) {\n      results.push(allPossible[i].toUpperCase());\n    }\n  }\n  // filter out duplicates and sort by length\n  results = [...new Set(results)].sort((a, b) => b.length - a.length);\n  console.log(results.slice(0, 5))\n};\n\n// find all permutations of an array\nfunction swap(array, i, j) {\n  if (i !== j) {\n    let swap = array[i];\n    array[i] = array[j];\n    array[j] = swap;\n  }\n};\n\nfunction permute_rec(res, str, array) {\n  if (array.length === 0) {\n    res.push(str);\n  } else {\n    for (let i = 0; i < array.length; i++) {\n      swap(array, 0, i);\n      permute_rec(res, str + array[0], array.slice(1));\n      swap(array, 0, i);\n    }\n  }\n};\n\nfunction xpermute_rec(res, sub, array) {\n  if (array.length === 0) {\n    if (sub.length > 0) permute_rec(res, \"\", sub);\n  } else {\n    xpermute_rec(res, sub, array.slice(1));\n    xpermute_rec(res, sub.concat(array[0]), array.slice(1));\n  }\n};\n\n// find all permutations for all lengths\nfunction getPermutationsAllLengths(array) {\n  let res = [];\n  xpermute_rec(res, [], array);\n  return res;\n};","export const ItemTypes = {\n  TILE: 'tile'\n}","import React from \"react\";\nimport { ItemTypes } from '../constants'\nimport { useDrag, useDrop } from 'react-dnd'\nimport { swapTile } from \"../GameState\";\nimport { Box, Typography } from \"@mui/material\";\n\nconst SQUARE_SIZE = 70;\n\nconst Tile = (props) => {\n\n    const [{ isDragging }, drag] = useDrag(() => ({\n        type: ItemTypes.TILE,\n        item: () => {\n          return {id: props.id}\n        },\n        collect: (monitor) => ({\n            isDragging: !!monitor.isDragging()\n          })\n      }))\n\n    const [{ isOver }, drop] = useDrop(() => ({\n        accept: ItemTypes.TILE,\n        drop: (item, monitor) => {\n          swapTile(item.id, props.id)\n        },\n        collect: monitor => ({\n          isOver: !!monitor.isOver(),\n        }),\n      }), [props.x, props.y])\n\n    return (\n      <Box\n        sx={{\n          // width: `${SQUARE_SIZE}px`,\n          // height: `${SQUARE_SIZE}px`,\n          width: `4rem`,\n          height: `4rem`,\n          background: \"#FFA987\",\n          cursor: \"move\",\n          borderRadius: \"5px\"\n        }}\n        ref={(node) => drag(drop(node))}\n      >\n        <Typography variant=\"h3\" sx={{\n          position: \"relative\",\n          color: \"#222\",\n          height: 1,\n          fontSize: \"2.5rem\",\n          lineHeight: `${SQUARE_SIZE}px`,\n          textAlign: \"center\",\n          fontWeight: 700,\n        }}>\n          {props.letter}\n        </Typography>  \n      </Box>\n    );\n  }\n  \n  export default Tile;","import React from \"react\";\nimport { Box } from \"@mui/material\";\nimport { ItemTypes } from '../constants'\nimport { useDrop } from 'react-dnd'\nimport { moveTile } from \"../GameState\";\n\nconst SQUARE_SIZE = 70;\n\nconst TileBenchSquare = (props) => {\n  const [{ isOver }, drop] = useDrop(() => ({\n    accept: ItemTypes.TILE,\n    drop: (item, monitor) => {\n      console.log(\"Dropped items props\", item)\n      moveTile(props.x, props.y, item)\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver(),\n    }),\n  }), [props.x, props.y])\n\n  let style = {\n    // width: `${SQUARE_SIZE}px`,\n    // height: `${SQUARE_SIZE}px`,\n    width: `4rem`,\n    height: `4rem`,\n    backgroundColor: \"#444140\",\n    boxShadow: \"inset 0px 0px 0px 1px #F4E5E1\",\n  }\n  if (isOver) {\n    style.background = \"rgb(87, 155, 87)\"\n  }\n\n  return <Box\n    sx={style}\n    ref={drop}\n  />\n\n}\n  \n  export default TileBenchSquare;","import React from \"react\";\nimport utils from '../utils';\nimport TileNew from \"./Tile\";\nimport BoardSquareNew from \"./Square\";\nimport { Stack } from '@mui/material';\n\nconst BOARD_WIDTH = 10;\nconst BOARD_HEIGHT = 10;\n\nconst Board = (props) => {\n\n  function renderBoardSquares(tiles) {\n    const matrix = Array.matrix(BOARD_WIDTH, BOARD_HEIGHT);\n\n    let squares = []\n\n    matrix.map((row, rowIndex) => {\n      let tempRow = []\n\n      row.map(index => {\n\n        let element = <BoardSquareNew\n          x={index}W\n          y={rowIndex+1}\n          key={`board-${index}${rowIndex}`}\n        />\n\n        tiles.forEach(tile => {\n          if (tile.x === index && tile.y === rowIndex+1) {\n            element = <TileNew key={`tile-${tile.id}`} {...tile} />\n          }\n        })\n        tempRow.push(element)\n      })\n      squares.push(\n      <Stack spacing={0} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n          {tempRow}\n      </Stack>\n      )\n    })\n    return squares;\n  };\n\n  return renderBoardSquares(props.tiles)\n}\n\nexport default Board;","import React from \"react\";\nimport TileNew from \"./Tile\";\nimport TileBenchSquareNew from \"./Square\";\nimport Stack from '@mui/material/Stack';\n\nconst BOARD_WIDTH = 12;\nconst BOARD_HEIGHT = 1;\n\nconst TileBench = (props) => { \n\n  function renderBoardSquares(tiles) {\n    const matrix = Array.matrix(BOARD_WIDTH, BOARD_HEIGHT);\n\n    let squares = []\n\n    matrix.map((row, rowIndex) => {\n      let tempRow = []\n\n      row.map(index => {\n\n        let element = <TileBenchSquareNew\n          x={index}\n          y={rowIndex}\n          key={`tile-bench-${index}${rowIndex}`}\n        />\n\n        tiles.forEach(tile => {\n          if (tile.x === index && tile.y === rowIndex) {\n            element = <TileNew key={`tile-${tile.id}`} {...tile} />\n          }\n        })\n        tempRow.push(element)\n      })\n      squares.push(\n      <Stack spacing={1} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n          {tempRow}\n      </Stack>\n      )\n    })\n    return squares;\n  };\n\n  return renderBoardSquares(props.tiles)\n}\n\nexport default TileBench;","import React from \"react\";\nimport { Container } from \"@mui/material\";\nimport Board from \"./Board\";\nimport TileBench from \"./TileBench\";\n\nconst GameArea = (props) => {\n\n  return (\n    <Container disableGutters maxWidth=\"md\" component=\"main\" sx={{ pt: 0, pb: 0 }}>\n      <Container disableGutters maxWidth=\"lg\" component=\"main\" sx={{ pt: 5, pb: 5 }}>\n        <Board tiles={props.tiles}/>\n      </Container>\n      <Container disableGutters maxWidth=\"lg\" component=\"main\" sx={{ pt: 5, pb: 6 }}>\n        <TileBench tiles={props.tiles}/>  \n      </Container>\n    </Container>\n  );\n}\n  \nexport default GameArea;","import GitHubIcon from '@mui/icons-material/GitHub';\nimport { Typography, Container } from '@mui/material/';\n\nconst GithubFooter = () => {\n  return (\n    <Container\n      maxWidth=\"md\"\n      component=\"footer\"\n      sx={{\n        borderTop: (theme) => `1px solid #555a5e`,\n        mt: 8,\n        py: [3, 6],\n      }}\n    >\n      <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n          <GitHubIcon \n          onClick={event =>  window.open('https://github.com/ESattler/qless/', '_blank')}\n          sx={{\n            fontSize: 50,\n            '&:hover': {\n              opacity: 0.5\n            }\n          }} />\n      </Typography>\n    </Container>\n  );\n}\n\nexport default GithubFooter;","import { Grid, Box, Modal} from '@mui/material'\nimport Draggable from 'react-draggable';\n\nconst ValidationModal = (props) => { \n\n  return (\n    <Modal\n      open={props.open}\n      onClose={props.handleClose}\n      BackdropProps={{ style: { backgroundColor: \"rgba(255,255,255,0.6)\" } }} \n    >\n      <Box justify=\"center\" alignContent=\"center\" alignItems=\"center\" sx={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        border: '2px solid #000',\n        p: 4\n      }}>\n        <Grid container justify=\"center\" alignContent=\"center\" xs={12} spacing={3}>\n          {props.foundWordsDivs}\n        </Grid>\n      </Box>\n    </Modal>\n  )\n}\n\nexport default ValidationModal","import {Typography, IconButton, Dialog, DialogTitle, DialogContent, Link, Divider } from '@mui/material'\nimport CloseIcon from '@mui/icons-material/Close';\n\n\nconst HelpDialog = (props) => {\n  return (\n    <Dialog\n      onClose={props.onClose}\n      aria-labelledby=\"customized-dialog-title\"\n      open={props.open}\n    >\n      <DialogTitle sx={{ m: 0, p: 2 }}>\n          <IconButton\n            aria-label=\"close\"\n            onClick={props.onClick}\n            sx={{\n              position: 'absolute',\n              right: 8,\n              top: 8,\n              color: (theme) => theme.palette.grey[500],\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <Divider sx={{ m: 0, p: 2 }}>HISTORY</Divider>\n        <Typography gutterBottom>\n          QLess is based on the dice game of a similar name. The Q-Less dice game was created by Tom Sturdevant\n          and can be bought from the <Link href=\"https://www.q-lessgame.com/\" target=\"_blank\">Q-Less website</Link>.\n        </Typography>\n        <Divider sx={{ m: 0, p: 2 }}>HOW TO PLAY</Divider>\n        <Typography gutterBottom>\n          The goal of the game is to create a board of interconnecting words using twelve randomized letters. The twelve letters are randomized\n          based on the twelve die from the original, physical game to guaranteee it will always include a variety of letters and a minimum of two vowels.\n          All words are validated using the 2019 official Scrabble® dictionary.\n        </Typography>\n        <Divider sx={{ m: 0, p: 2 }}>RULE CHANGES</Divider>\n        <Typography gutterBottom>\n          This game differs from the official Q-Less game in that it allows the use of two letter words.\n          In the settings you can turn on the official ruleset which will ban two letter words.\n          Additionally, you can turn on easy mode which guarantees three vowels and removes the letters Z/X/V from possible rolls.\n        </Typography>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default HelpDialog","\nimport { useState } from \"react\";\nimport { Grid, Typography, Container, IconButton } from '@mui/material'\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\nimport HelpDialog from '../components/HelpDialog';\n\nconst ToolBarView = (props) => {\n\n  const [helpOpen, setHelpOpen] = useState(false);\n  const handleHelpOpen = () => {\n    setHelpOpen(true);\n  };\n\n  const handleHelpClose = () => {\n    setHelpOpen(false);\n  };\n\n\n  return (\n    <Container\n      maxWidth=\"xs\"\n      component=\"header\"\n      sx={{\n        borderBottom: (theme) => `1px solid #555a5e`,\n        pb: 0\n      }}\n    >\n      <Grid container maxWidth=\"sm\" justifyContent=\"center\">\n        <Grid container item md={2} justifyContent=\"flex-end\" alignItems=\"flex-end\">\n            <IconButton aria-label=\"delete\" size=\"large\" onClick={() => handleHelpOpen()}>\n              <HelpOutlineIcon fontSize=\"inherit\" sx={{ fontSize: \"40px\"}}/>\n            </IconButton>\n        </Grid>\n        <Grid container item md={5} justifyContent=\"center\">\n          <Typography variant=\"h3\" color=\"inherit\" align=\"center\" noWrap>\n            QLESS\n          </Typography>\n        </Grid>\n        <Grid container item md={2} justifyContent=\"flex-start\" alignItems=\"flex-start\">\n          <IconButton aria-label=\"delete\" size=\"large\">\n            <SettingsIcon fontSize=\"inherit\" sx={{ fontSize: \"40px\"}}/>\n          </IconButton>\n        </Grid>\n      </Grid>\n      <HelpDialog open={helpOpen} onClose={handleHelpClose} onClick={handleHelpClose}/>\n    </Container>\n  );\n}\n\nexport default ToolBarView","import { Grid, Button, Container } from '@mui/material'\nimport { areAllConnected, createTiles, getAllWords, resetTiles, shuffleTiles, generateRandomLetters } from \"../GameState\";\nimport Words from '../words.json'\n\n\nconst GameButtons = (props) => {\n\n  /**\n   * Generates new random letters and resets tiles\n   */\n  const createNewGame = () => {\n    let newLetters = generateRandomLetters()\n  \n    let tempTiles = createTiles(newLetters)\n  \n    props.setTiles({...tempTiles})\n    resetTiles({...tempTiles})\n    props.setFoundWords([])\n  }\n  \n  /**\n   * Moves all tiles back to bench\n   */\n  const setTilesBackToBench = () => {\n    let allStartingSpot = Object.values(props.tiles).every(tile => tile.y === 0)\n    if (allStartingSpot) {\n      return\n    }\n    let letters = Object.values(props.tiles).map(tile => tile.letter)\n    let tempTiles = createTiles(letters)\n  \n    props.setTiles({...tempTiles})\n    resetTiles({...tempTiles})\n  }\n  \n  /**\n   * Shuffles tiles still on bench\n   */\n  const shuffle = () => {\n    let x = Object.values(props.tiles).filter(tile => tile.y === 0).length\n    const spots = [...Array(x).keys()].sort(() => (Math.random() > 0.5) ? 1 : -1)\n    console.log(spots)\n  \n    let tempTiles = shuffleTiles(spots)\n    props.setTiles({...tempTiles})\n    resetTiles({...tempTiles})\n  }\n  \n  /**\n   * Validates all the letters on the board, connected and then opens\n   * modal showing which are spelling correct\n   */\n  const validate = () => {\n    let anyStartingSpot = Object.values(props.tiles).some(tile => tile.y === 0)\n    if (anyStartingSpot) {\n      alert(\"NOT ALL ON BOARD\")\n      return;\n    }\n  \n    let allConnected = areAllConnected(Object.values(props.tiles))\n    if (!allConnected) {\n      alert(\"NOT ALL CONNECTED\")\n      return;\n    }\n  \n    const words = getAllWords(Object.values(props.tiles))\n    let checkedWords = []\n    words.forEach(word => {\n      console.log(`${word} | ${Words.hasOwnProperty(word)}`)\n      checkedWords.push({\n        word: word,\n        valid: Words.hasOwnProperty(word)\n      })\n    })\n  \n    props.setFoundWords(checkedWords)\n    props.handleValidationOpen()\n  }\n\n\n  return (\n    <Container disableGutters maxWidth=\"sm\" component=\"main\" justifyContent=\"center\">\n      <Grid container maxWidth=\"sm\" spacing={3}>\n        <Grid container item md={3} justifyContent=\"center\">\n          <Button variant=\"contained\" sx={{backgroundColor: \"#E54B4B\", width: 1}} onClick={() => createNewGame()}>New Game</Button>\n        </Grid>\n        <Grid container item md={3} justifyContent=\"center\">\n          <Button variant=\"contained\" sx={{backgroundColor: \"#FFA987\", width: 1}} onClick={() => setTilesBackToBench()}>Reset Tiles</Button>\n        </Grid>\n        <Grid container item md={3} justifyContent=\"center\">\n          <Button variant=\"contained\" sx={{backgroundColor: \"#FFA987\", width: 1}} onClick={() => shuffle()}>Shuffle</Button>\n        </Grid>\n        <Grid container item md={3} justifyContent=\"center\">\n          <Button variant=\"contained\" sx={{backgroundColor: \"#FFA987\", width: 1}} onClick={() => validate()}>Validate</Button>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default GameButtons","import React, { useState, useEffect } from \"react\";\nimport { Grid, CssBaseline, GlobalStyles } from '@mui/material'\nimport CloseIcon from '@mui/icons-material/Close';\nimport CheckIcon from '@mui/icons-material/Check';\nimport { observe } from \"../GameState\";\nimport GameAreaNew from \"../components/GameArea\";\nimport GithubFooter from \"../components/GithubFooter\";\nimport ValidationModal from \"../components/ValidationModal\";\nimport ToolBarView from \"./ToolBarView\";\nimport GameButtons from \"./GameButtons\";\n\n\nconst GameView = (props) => {\n\n\n  const [tiles, setTiles] = useState({...props.tiles});\n  useEffect(() => observe((newPos) => {\n    setTiles({...newPos})\n  }, tiles));\n\n  const [validationOpen, setValidationOpen] = React.useState(false);\n  const [foundWords, setFoundWords] = useState([]);\n\n  const handleValidationOpen = () => {\n    setValidationOpen(true);\n  };\n\n  const handleValidationClose = () => {\n    setValidationOpen(false);\n  };\n\n  let foundWordsDivs = []\n  for (let word of foundWords) {\n    foundWordsDivs.push(\n      <Grid container justifyContent=\"center\"item xs={6}>\n        { word.valid &&\n          <CheckIcon color=\"success\" />\n        }\n        { !word.valid &&\n          <CloseIcon color=\"error\" />\n        } {word.word}\n      </Grid>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      <GlobalStyles styles={{ ul: { margin: 0, padding: 0, listStyle: 'none', }}} />\n      <CssBaseline />\n\n      <ToolBarView />\n\n      <GameAreaNew tiles={Object.values(tiles)} />\n\n      <GameButtons setTiles={setTiles} setFoundWords={setFoundWords} tiles={tiles} handleValidationOpen={handleValidationOpen}/>\n\n      <GithubFooter sx={{ mt: 5 }} />\n\n      <ValidationModal open={validationOpen} handleClose={handleValidationClose} foundWordsDivs={foundWordsDivs} />\n    </React.Fragment>\n  )\n}\n\nexport default GameView;","import { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { createTiles, generateMatches, generateRandomLetters } from '../GameState';\nimport GameViewNew from './GameView';\n\nconst AppView = () => {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <GameViewNew tiles={createTiles(generateRandomLetters())}/>\n    </DndProvider>\n  )\n}\n\nexport default AppView","import {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n} from \"react-router-dom\";\nimport AppView from './views/AppView';\n\nfunction App() {\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<AppView />} />\n        <Route path=\"*\" element={<AppView />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nif(module.hot){\n  module.hot.accept()\n}\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}