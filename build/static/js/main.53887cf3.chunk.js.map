{"version":3,"sources":["utils.js","GameState.js","constants.js","components/Tile.js","components/Square.js","components/Board.js","components/TileBench.js","components/GameArea.js","components/GithubFooter.js","components/HelpDialog.js","components/SettingsDialog.js","views/ToolBarView.js","components/ValidationModal.js","views/GameButtons.js","views/GameView.js","views/AppView.js","App.js","index.js"],"names":["Array","prototype","swap","a","b","this","length","temp","range","n","from","x","i","matrix","y","rows","columns","map","row","slice","observer","ItemTypes","Daily","Unlimited","NotAllConnected","NotAllOnBoard","NoTwoLetterWords","letters","emitChange","resetTiles","tiles","getRandomInt","max","Math","floor","random","generateRandomLetters","easyMode","localStorage","getItem","charAt","createTiles","newLetters","tempTiles","forEach","letter","id","String","getNeighbors","allTiles","tile","upNeighbor","downNeighbor","rightNeighbor","leftNeighbor","tempTile","getWordDown","down","getWordRight","right","getAllWords","words","up","left","console","log","word","push","Tile","props","useDrag","type","item","collect","monitor","isDragging","drag","useDrop","accept","drop","fromID","toID","fromX","fromY","toX","toY","swapTile","isOver","style","width","board","height","minWidth","maxWidth","minHeight","maxHeight","background","cursor","borderRadius","Box","alignItems","justifyContent","sx","ref","node","Typography","position","color","fontSize","lineHeight","textAlign","fontWeight","TileBenchSquare","moveTile","backgroundColor","boxShadow","Board","squares","rowIndex","tempRow","val","index","element","Square","W","Stack","spacing","direction","renderBoardSquares","TileBench","firstRow","secondRow","value","paddingTop","GameArea","Container","disableGutters","component","pt","pb","difficultyMode","paddingLeft","paddingRight","ruleSet","GithubFooter","borderTop","theme","mt","py","variant","align","onClick","event","window","open","opacity","HelpDialog","Dialog","onClose","fullWidth","DialogTitle","m","p","IconButton","top","palette","grey","DialogContent","Divider","gutterBottom","Link","href","target","SettingsDialog","useState","mode","setEasyMode","officalRules","setOfficalRules","Switch","checked","disabled","onChange","setItem","setDifficultyMode","setRuleSet","ToolBarView","helpOpen","setHelpOpen","handleHelpClose","settingsOpen","setSettingsOpen","handleSettingsClose","nav","useNavigate","AppBar","elevation","borderBottom","divider","Toolbar","Grid","justify","container","xs","Button","disableRipple","replace","marginRight","size","PaperComponent","handle","cancel","Paper","ValidationModal","validWords","invalidWords","foundWords","valid","sm","toolTipOpen","setToolTipOpen","setCopyText","fill","text","j","concat","andleClose","isMobile","handleClose","alignContent","Tooltip","title","navigator","clipboard","writeText","setTimeout","GameButtons","createNewGame","setTiles","setFoundWords","shuffle","Object","values","filter","spots","keys","sort","shuffledSpots","pop","shuffleTiles","validate","some","setValidationError","handlePopOverOpen","examinedTiles","countConnect","includes","areAllConnected","twoLetterWords","officialRules","checkedWords","Words","hasOwnProperty","handleValidationOpen","popOverAnchor","setPopOverAnchor","currentTarget","validationError","validationOpen","setValidationOpen","useEffect","md","every","setTilesBackToBench","Popover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","GameView","o","observe","newPos","Fragment","GlobalStyles","styles","ul","margin","padding","listStyle","CssBaseline","AppView","DndProvider","backend","TouchBackend","HTML5Backend","App","exact","path","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.53887cf3.chunk.js","sourcesContent":["/**\n * Array.prototype.swap\n * Rearrange an array to swap the positions of two elements.\n * @param {Number} a - the index of the first element to swap.\n * @param {Number} b - the index of the second element to swap.\n * @returns {Array}\n * @example\n * // returns [ 'a', 'c', 'b' ]\n * [ 'a', 'b', 'c' ].swap(1, 2)\n */\n Array.prototype.swap = function (a, b) {\n  if ( b >= this.length || b < 0 ) return this;\n\n  // Temporary variable to hold data while we juggle\n  let temp = this[a];\n  this[a] = this[b];\n  this[b] = temp;\n  return this;\n};\n\n/**\n * Array.range\n * Create a new array of length n, where the elements are numbers\n * from 0 to n - 1.\n * @param {Number} n - the desired length of the range.\n * @returns {Array}\n * @example\n * // returns [ 0, 1, 2, 3 ]\n * Array.range(4);\n */\nArray.range = n => Array.from(new Array(n), (x,i) => i);\n\n/**\n * Array.matrix\n * Create a new two-dimensional array, where each element is its own index.\n * @param {Number} x - the desired number of columns (possible x values)\n * @param {Number} y - the desired number of rows (possible y values)\n * @returns {Array}\n * @example\n * // returns [\n * //   [ 0, 1, 2 ],\n * //   [ 0, 1, 2 ]\n * // ]\n * Array.matrix(3, 2);\n */\nArray.matrix = (x, y) => {\n  const rows = Array.range(y);\n  const columns = Array.range(x);\n  return rows.map( (row, i) => columns.slice() );\n}","import Words from './words.json'\n\nlet letters = {}\nlet observer;\n\n/**\n  PROPOGATE CHANGES\n*/\n\nfunction emitChange() {\n  observer(letters)\n}\n\nexport function observe(o, tiles) {\n  observer = o\n  letters = tiles\n}\n\nexport function moveTile(toX, toY, item) {\n  letters[item.id] = {\n    ...letters[item.id],\n    x: toX,\n    y: toY,\n  }\n  emitChange();\n}\n\nexport function swapTile(fromID, toID) {\n  let fromX = letters[fromID].x;\n  let fromY = letters[fromID].y;\n\n  let toX = letters[toID].x;\n  let toY = letters[toID].y;\n\n  letters[fromID] = {\n    ...letters[fromID],\n    x: toX,\n    y: toY\n  }\n\n  letters[toID] = {\n    ...letters[toID],\n    x: fromX,\n    y: fromY\n  }\n  emitChange()\n}\n\nexport function canDropTile(squareX, squareY, item) {\n  let allStartingSpot = Object.values(letters).every(tile => tile.y === 0)\n\n  let nextToExistingLetter = false\n  Object.values(letters).forEach(tile => {\n    if (tile.y !== 0 && tile.id !== item.id && ((Math.abs(tile.x - squareX) === 1 &&  Math.abs(tile.y - squareY) === 0) || (Math.abs(tile.y - squareY) === 1 && Math.abs(tile.x - squareX) === 0))) {\n      nextToExistingLetter = true\n    }\n  })\n\n\n  let [tile, up, down, left, right] = getNeighborsById(Object.values(letters), item.id);\n  let connectingPiece = (((up && down) || (left && right)) && tile.y !== 0);\n\n  return (allStartingSpot || nextToExistingLetter) && !connectingPiece\n}\n\nexport function resetTiles(tiles) {\n    letters = tiles\n}\n\n/*\n  GENERATE RANDOM LETTERS\n*/\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\n/**\n * Hard Mode\n * AAA BBB CCCC DDD EEEE FF GGG HHHH III J KK LLLLL MMM NNNN OOOOO PPP RRRR SS TTTTT UU V WW X YY Z\n * Easy Mode\n * AAAA BBB CCCC DDD EEEEE FF GGG HHHH III J KK LLLLL MMM NNNN OOOOO PPP RRRR SSSS TTTTT UU WW Y\n */\nexport function generateRandomLetters() {\n\n  let easyMode = localStorage.getItem(\"easyMode\") !== null ? localStorage.getItem(\"easyMode\") === \"true\" : false\n  \n  let one = \"CCDTBJ\".charAt(getRandomInt(6))\n  let two = easyMode ? \"SSBNSK\".charAt(getRandomInt(6)) : \"XZBNSK\".charAt(getRandomInt(6))\n  let three = \"YMLBML\".charAt(getRandomInt(6))\n  let four = easyMode ? \"OEIOIN\".charAt(getRandomInt(6)) : \"ONIOIY\".charAt(getRandomInt(6))\n  let five = \"MCCTTS\".charAt(getRandomInt(6))\n  let six = \"HPTHTW\".charAt(getRandomInt (6))\n  let seven = \"RLLFDW\".charAt(getRandomInt(6))\n  let eight = \"EAOUUI\".charAt(getRandomInt(6))\n  let nine = \"RHNHNR\".charAt(getRandomInt(6))\n  let ten = \"OEAEAO\".charAt(getRandomInt(6))\n  let eleven = easyMode ? \"KPFPGA\".charAt(getRandomInt(6)) : \"KPFVPG\".charAt(getRandomInt(6))\n  let twelve = \"GDGRRL\".charAt(getRandomInt (6))\n\n  let letters = [one, two, three, four, five, six, seven, eight, nine, ten, eleven, twelve]\n\n  return letters\n}\n\nexport function createTiles(newLetters) {\n  let tempTiles = {}\n  newLetters.forEach((letter, i) => {\n    tempTiles[i] = {\n      x: i,\n      y: 0,\n      letter,\n      id: String(i)\n    }\n  })\n  return tempTiles\n}\n\nexport function shuffleTiles(shuffledSpots) {\n  let tempTiles = {}\n  for (let i = 0; i < Object.values(letters).length; i++) {\n    tempTiles[i] = {\n      ...letters[i]\n    }\n\n    if (tempTiles[i].y === 0) {\n      tempTiles[i].x = shuffledSpots.pop()\n    }\n\n  }\n\n  return tempTiles\n}\n\n/*\n  FIND LETTERS IN GRID\n*/\nexport function areAllConnected(tiles) {\n  let examinedTiles = []\n\n  let countConnect = (function (tile) {\n    const [up, down, left, right] = getNeighbors(tiles, tile)\n    if (up && !examinedTiles.includes(up.id) ) {\n      examinedTiles.push(up.id)\n      countConnect(up)\n    }\n    if (down && !examinedTiles.includes(down.id)) {\n      examinedTiles.push(down.id)\n      countConnect(down)\n    }\n    if (left && !examinedTiles.includes(left.id)) {\n      examinedTiles.push(left.id)\n      countConnect(left)\n    }\n    if (right && !examinedTiles.includes(right.id)) {\n      examinedTiles.push(right.id)\n      countConnect(right)\n    }\n  })\n\n  countConnect(tiles[0])\n\n  return examinedTiles.length === 12\n}\n\nfunction getNeighborsById(allTiles, id) {\n  let tile = allTiles.filter(t => t.id === id)[0]\n  return [tile, ...getNeighbors(allTiles, tile)]\n}\n\nfunction getNeighbors(allTiles, tile) {\n  let upNeighbor = null;\n  let downNeighbor = null;\n  let rightNeighbor = null;\n  let leftNeighbor = null;\n  allTiles.forEach(tempTile => {\n    \n    if (tempTile.x === tile.x && tempTile.y - tile.y === -1) {\n      upNeighbor = tempTile\n    }\n    \n    if (tempTile.x === tile.x && tempTile.y - tile.y === 1) {\n      downNeighbor = tempTile\n    }\n    \n    if (tempTile.x - tile.x === 1 && tempTile.y  ===tile.y) {\n      rightNeighbor = tempTile\n    }\n    \n    if (tempTile.x - tile.x === -1 && tempTile.y  ===tile.y) {\n      leftNeighbor = tempTile\n    }\n  })\n  return [upNeighbor, downNeighbor, leftNeighbor, rightNeighbor];\n}\n\nfunction getWordDown(allTiles, tile) {\n  const [, down, , ] = getNeighbors(allTiles, tile)\n  if (!down) {\n    return tile.letter\n  }\n  return `${tile.letter}${getWordDown(allTiles, down)}`\n}\n\nfunction getWordRight(allTiles, tile) {\n  const [, , , right] = getNeighbors(allTiles, tile)\n  if (!right) {\n    return tile.letter\n  }\n  return `${tile.letter}${getWordRight(allTiles, right)}`\n}\n\n\nexport function getAllWords(allTiles) {\n  let words = []\n\n  allTiles.forEach(tile => {\n    const [up, down, left, right] = getNeighbors(allTiles, tile)\n\n    if (down && !up) {\n      console.log(`Found starting letter ${tile.letter}, getting word in DOWN direction`)\n      let word = getWordDown(allTiles, tile)\n      words.push(word)\n      console.log(`FOUND WORD ${word}`)\n    }\n\n    if (right && !left) {\n      console.log(`Found starting letter ${tile.letter}, getting word in RIGHT direction`)\n      let word = getWordRight(allTiles, tile)\n      words.push(word)\n      console.log(`FOUND WORD ${word}`)\n    }\n  })\n  return words\n}\n\n/*\n  SOLVE\n*/\nexport function generateMatches(letters) {\n\n  let allPossible = getPermutationsAllLengths(letters)\n  let results = [];\n\n  for (let i = 0; i < allPossible.length; i++) {\n    if (Words.hasOwnProperty(allPossible[i].toUpperCase())) {\n      results.push(allPossible[i].toUpperCase());\n    }\n  }\n  // filter out duplicates and sort by length\n  results = [...new Set(results)].sort((a, b) => b.length - a.length);\n};\n\n// find all permutations of an array\nfunction swap(array, i, j) {\n  if (i !== j) {\n    let swap = array[i];\n    array[i] = array[j];\n    array[j] = swap;\n  }\n};\n\nfunction permute_rec(res, str, array) {\n  if (array.length === 0 && Words.hasOwnProperty(str)) {\n    res.push(str);\n  } else {\n    for (let i = 0; i < array.length; i++) {\n      swap(array, 0, i);\n      permute_rec(res, str + array[0], array.slice(1));\n      swap(array, 0, i);\n    }\n  }\n};\n\nfunction xpermute_rec(res, sub, array) {\n  if (array.length === 0) {\n    console.log(res)\n    if (sub.length >= 5) permute_rec(res, \"\", sub);\n  } else {\n    xpermute_rec(res, sub, array.slice(1));\n    xpermute_rec(res, sub.concat(array[0]), array.slice(1));\n  }\n};\n\n// find all permutations for all lengths\nfunction getPermutationsAllLengths(array) {\n  let res = [];\n  xpermute_rec(res, [], array);\n  return res;\n};","export const ItemTypes = {\n  TILE: 'tile'\n}\nexport const Daily = \"DAILY\"\nexport const Unlimited = \"UNLIMITED\"\nexport const NotAllConnected = \"NotAllConnected\"\nexport const NotAllOnBoard = \"NotAllOnBoard\"\nexport const NoTwoLetterWords = \"NoTwoLetterWords\"","import React from \"react\";\nimport { ItemTypes } from '../constants'\nimport { useDrag, useDrop } from 'react-dnd'\nimport { swapTile } from \"../GameState\";\nimport { Box, Typography } from \"@mui/material\";\n\nconst Tile = (props) => {\n\n    const [{ isDragging }, drag] = useDrag(() => ({\n        type: ItemTypes.TILE,\n        item: () => {\n          return {id: props.id}\n        },\n        collect: (monitor) => ({\n            isDragging: !!monitor.isDragging()\n          })\n      }))\n\n    const [{ isOver }, drop] = useDrop(() => ({\n        accept: ItemTypes.TILE,\n        drop: (item, monitor) => {\n          swapTile(item.id, props.id)\n        },\n        collect: monitor => ({\n          isOver: !!monitor.isOver(),\n        }),\n      }), [props.x, props.y])\n\n\n    let style = {\n      width: props.board ? '8vw' : '4vw',\n      height: props.board ? '8vw' : '4vw',\n      minWidth: props.board ? \"3rem\" : \"2.5rem\",\n      maxWidth: props.board ? \"4rem\" : \"2.5rem\",\n      minHeight: props.board ? \"3rem\" : \"2.5rem\",\n      maxHeight: props.board ? \"4rem\" : \"2.5rem\",\n      background: \"#FFA987\",\n      cursor: \"move\",\n      borderRadius: \"5px\"\n    }\n\n    return (\n      <Box\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        sx={style}\n        ref={(node) => drag(drop(node))}\n      >\n        <Typography alignItems=\"center\" justifyContent=\"center\" sx={{\n          position: \"relative\",\n          color: \"#444140\",\n          height: 1,\n          fontSize: \"1rem\",\n          lineHeight: style.minHeight,\n          textAlign: \"center\",\n          fontWeight: 700,\n        }}>\n          {props.letter}\n        </Typography>  \n      </Box>\n    );\n  }\n  \n  export default Tile;","import React from \"react\";\nimport { Box } from \"@mui/material\";\nimport { ItemTypes } from '../constants'\nimport { useDrop } from 'react-dnd'\nimport { moveTile } from \"../GameState\";\n\nconst TileBenchSquare = (props) => {\n  const [{ isOver }, drop] = useDrop(() => ({\n    accept: ItemTypes.TILE,\n    drop: (item, monitor) => {\n      console.log(\"Dropped items props\", item)\n      moveTile(props.x, props.y, item)\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver(),\n    }),\n  }), [props.x, props.y])\n\n  let style = {\n    width: props.board ? '8vw' : '4vw',\n    height: props.board ? '8vw' : '4vw',\n    minWidth: \"3rem\",\n    maxWidth: props.board ? \"4rem\" : \"2.5rem\",\n    minHeight: \"3rem\",\n    maxHeight: props.board ? \"4rem\" : \"2.5rem\",\n    backgroundColor: \"#444140\",\n    boxShadow: \"inset 0px 0px 0px 1px #F4E5E1\",\n  }\n  if (isOver) {\n    style.background = \"rgb(87, 155, 87)\"\n  }\n\n  return <Box\n    sx={style}\n    ref={drop}\n  />\n\n}\n  \n  export default TileBenchSquare;","import React from \"react\";\nimport utils from '../utils';\nimport Tile from \"./Tile\";\nimport Square from \"./Square\";\nimport { Stack } from '@mui/material';\n\nconst BOARD_WIDTH = 8;\nconst BOARD_HEIGHT = 8;\n\nconst Board = (props) => {\n\n  function renderBoardSquares(tiles) {\n    const matrix = Array.matrix(BOARD_WIDTH, BOARD_HEIGHT);\n\n    let squares = []\n\n    matrix.forEach((row, rowIndex) => {\n      let tempRow = []\n\n      row.forEach((val, index) => {\n\n        let element = <Square\n          x={index}W\n          y={rowIndex+1}\n          key={`board-${index}${rowIndex}`}\n          board={true}\n        />\n\n        tiles.forEach(tile => {\n          if (tile.x === index && tile.y === rowIndex+1) {\n            element = <Tile key={`tile-${tile.id}`} {...tile} board={true}/>\n          }\n        })\n        tempRow.push(element)\n      })\n      squares.push(\n      <Stack spacing={0} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n          {tempRow}\n      </Stack>\n      )\n    })\n    return squares;\n  };\n\n  return renderBoardSquares(props.tiles)\n}\n\nexport default Board;","import React from \"react\";\nimport Tile from \"./Tile\";\nimport Square from \"./Square\";\nimport Stack from '@mui/material/Stack';\nimport { Container } from \"@mui/material\";\n\nconst BOARD_WIDTH = 12;\nconst BOARD_HEIGHT = 1;\n\nconst TileBench = (props) => { \n\n  function renderBoardSquares(tiles) {\n    const matrix = Array.matrix(BOARD_WIDTH, BOARD_HEIGHT);\n\n    let firstRow = []\n    let secondRow = []\n\n    matrix.forEach((row, rowIndex) => {\n      row.forEach((value, index) => {\n        tiles.forEach(tile => {\n          if (tile.x === index && tile.y === rowIndex) {\n            if ( index <= 5) {\n              firstRow.push(<Tile key={`tile-${tile.id}`} {...tile} board={false} />)\n            } else {\n              secondRow.push(<Tile key={`tile-${tile.id}`} {...tile} board={false} />)\n            }\n          }\n        })\n      })\n    })\n\n    return (\n      <>\n        <Stack spacing={3} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n            {firstRow}\n        </Stack>\n        <Stack spacing={3} direction=\"row\" justifyContent=\"center\" alignItems=\"center\" sx={{paddingTop: '10px'}}>\n            {secondRow}\n        </Stack>\n      </>\n    )\n  };\n\n  return renderBoardSquares(props.tiles)\n}\n\nexport default TileBench;","import React from \"react\";\nimport { Container, Stack, Typography } from \"@mui/material\";\nimport Board from \"./Board\";\nimport TileBench from \"./TileBench\";\n\nconst GameArea = (props) => {\n\n  return (\n    <Container disableGutters maxWidth=\"md\" component=\"main\" sx={{ pt: 0, pb: 0 }}>\n      <Container disableGutters maxWidth=\"lg\" component=\"main\" sx={{ pt: 2, pb: 5 }}>\n        <Stack spacing={0} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n          <Typography sx={{\n            fontWeight: 'bold',\n            fontSize: '1rem'\n          }}>\n            {props.difficultyMode}\n          </Typography>\n          <Typography sx={{\n            paddingLeft: 2,\n            paddingRight: 2\n          }}>\n            |\n          </Typography>\n          <Typography sx={{\n            fontWeight: 'bold',\n            fontSize: '1rem'\n          }}>\n            {props.ruleSet}\n          </Typography>\n        </Stack>\n        <Board tiles={props.tiles}/>\n      </Container>\n      <Container disableGutters maxWidth=\"md\" component=\"main\" sx={{ pt: 2, pb: 6 }}>\n        <TileBench tiles={props.tiles}/>  \n      </Container>\n    </Container>\n  );\n}\n  \nexport default GameArea;","import GitHubIcon from '@mui/icons-material/GitHub';\nimport { Typography, Container, Divider } from '@mui/material/';\n\nconst GithubFooter = () => {\n  return (\n    <Container\n      maxWidth=\"sm\"\n      sx={{\n        borderTop: (theme) => `1px solid #555a5e`,\n        mt: 8,\n        py: [3, 6],\n        width: \"64vw\", maxWidth: \"32rem\", minWidth: \"8rem\"\n      }}\n    >\n      <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n          <GitHubIcon \n          onClick={event =>  window.open('https://github.com/ESattler/qless/', '_blank')}\n          sx={{\n            fontSize: 50,\n            '&:hover': {\n              opacity: 0.5\n            }\n          }} />\n      </Typography>\n    </Container>\n  );\n}\n\nexport default GithubFooter;","import {Typography, IconButton, Dialog, DialogTitle, DialogContent, Link, Divider } from '@mui/material'\nimport CloseIcon from '@mui/icons-material/Close';\n\n\nconst HelpDialog = (props) => {\n  return (\n    <Dialog\n      onClose={props.onClose}\n      aria-labelledby=\"customized-dialog-title\"\n      open={props.open}\n      maxWidth=\"sm\"\n      fullWidth={true}\n    >\n      <DialogTitle sx={{ m: 0, p: 2 }}>\n          <IconButton\n            aria-label=\"close\"\n            onClick={props.onClick}\n            sx={{\n              position: 'absolute',\n              right: 8,\n              top: 8,\n              color: (theme) => theme.palette.grey[500],\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <Divider sx={{ m: 0, p: 2, fontWeight: \"bold\" }}>HISTORY</Divider>\n        <Typography gutterBottom>\n          QLess is based on the dice game of a similar name. The Q-Less dice game was created by Tom Sturdevant\n          and can be bought from the <Link href=\"https://www.q-lessgame.com/\" target=\"_blank\">Q-Less website</Link>.\n        </Typography>\n        <Divider sx={{ m: 0, p: 2, fontWeight: \"bold\" }}>HOW TO PLAY</Divider>\n        <Typography gutterBottom>\n          The goal of the game is to create a board of interconnecting words using twelve randomized letters.\n          All words are validated using the 2019 official Scrabble® dictionary.\n        </Typography>\n        <Divider sx={{ m: 0, p: 2, fontWeight: \"bold\" }}>RULE CHANGES</Divider>\n        <Typography gutterBottom>\n          This game differs from the official Q-Less game in that it allows the use of two letter words.\n          In the settings you can turn on the official ruleset which will ban two letter words.\n        </Typography>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default HelpDialog","import { useState } from 'react';\nimport {Typography, IconButton, Dialog, DialogTitle, DialogContent, Switch, Divider, Box } from '@mui/material'\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Daily, Unlimited } from '../constants';\n\n\nconst SettingsDialog = (props) => {\n\n  const [easyMode, setEasyMode] = useState(localStorage.getItem(\"easyMode\") !== null ? localStorage.getItem(\"easyMode\") === \"true\" && props.mode === Unlimited : false);\n\n  const handleEasyModeChange = (event) => {\n    localStorage.setItem(\"easyMode\", event.target.checked)\n    setEasyMode(event.target.checked)\n    event.target.checked ? props.setDifficultyMode(\"Easy Mode\") : props.setDifficultyMode(\"Normal Mode\")\n\n  };\n\n  const [officalRules, setOfficalRules] = useState(localStorage.getItem(\"officialRules\") !== null ? localStorage.getItem(\"officialRules\") === \"true\" : false);\n\n  const handleOfficialRulesChange = (event) => {\n    localStorage.setItem(\"officialRules\", event.target.checked)\n    setOfficalRules(event.target.checked)\n    event.target.checked ? props.setRuleSet(\"Official Rules\") : props.setRuleSet(\"Unofficial Rules\")\n  };\n\n  return (\n    <Dialog\n      onClose={props.onClose}\n      aria-labelledby=\"customized-dialog-title\"\n      open={props.open}\n      maxWidth=\"xs\"\n      fullWidth={true}\n    >\n      <DialogTitle sx={{ m: 0, p: 2 }}>\n          <IconButton\n            aria-label=\"close\"\n            onClick={props.onClick}\n            sx={{\n              position: 'absolute',\n              right: 8,\n              top: 8,\n              color: (theme) => theme.palette.grey[500],\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <Divider sx={{ m: 0, p: 2, fontWeight: \"bold\" }}>EASY MODE</Divider>\n        <Box textAlign='center'>\n          <Typography>\n            Guaranteed three vowels and removes V/X/Z from letter pool. Not available in DAILY mode.\n          </Typography>\n          <Switch checked={easyMode} disabled={props.mode === Daily} onChange={handleEasyModeChange}/>\n        </Box>\n        <Divider sx={{ m: 0, p: 2, fontWeight: \"bold\" }}>OFFICIAL RULES</Divider>\n        <Box textAlign='center'>\n          <Typography>\n            Bans two letter words\n          </Typography>\n          <Switch checked={officalRules} onChange={handleOfficialRulesChange}/>\n        </Box>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default SettingsDialog;","\nimport { useState } from \"react\";\nimport { Typography, IconButton, AppBar, Toolbar, Button, Grid} from '@mui/material'\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\nimport HelpDialog from '../components/HelpDialog';\nimport SettingsDialog from \"../components/SettingsDialog\";\nimport { Daily, Unlimited } from \"../constants\";\nimport { useNavigate } from 'react-router-dom'\n\nconst ToolBarView = (props) => {\n\n  const [helpOpen, setHelpOpen] = useState(false);\n  const handleHelpOpen = () => {\n    setHelpOpen(true);\n  };\n\n  const handleHelpClose = () => {\n    setHelpOpen(false);\n  };\n\n  const [settingsOpen, setSettingsOpen] = useState(false);\n  const handleSettingsOpen = () => {\n    setSettingsOpen(true);\n  };\n\n  const handleSettingsClose = () => {\n    setSettingsOpen(false);\n  };\n\n  let nav = useNavigate();\n\n  return (\n    <AppBar\n      position=\"static\"\n      color=\"default\"\n      elevation={0}\n      sx={{ borderBottom: (theme) => `1px solid ${theme.palette.divider}`}}\n    >\n      <Toolbar justifyContent=\"center\" alignItems=\"center\" sx={{justifyContent: \"center\", alignItems: \"center\"}}>\n        <Grid maxWidth=\"sm\" justify={\"space-between\"} container>\n          <Grid xs={3} container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n            <Typography sx={{fontWeight: 700, color: \"#444140\",}}>QLESS</Typography>\n          </Grid>\n          <Grid xs={6} container direction=\"row\" justifyContent=\"left\" alignItems=\"center\">\n            <Grid container direction=\"row\" justifyContent=\"left\" alignItems=\"center\">\n              <Button disableRipple onClick={() => nav(\"/qless\", { replace: true })} variant=\"text\" sx={{\n                borderRadius: \"10px\",\n                color: \"#444140\",\n                fontWeight: 500,\n                backgroundColor: props.mode === Daily ? \"#FFA987\" : \"transparent\",\n                '&:hover': {\n                  backgroundColor: '#FFA987',\n                },\n                marginRight: \"10px\"\n              }}>\n                Daily\n              </Button>\n              <Button disableRipple onClick={() => nav(\"/qless/unlimited\", { replace: true })} variant=\"text\" sx={{\n                borderRadius: \"10px\",\n                color: \"#444140\",\n                fontWeight: 500,\n                backgroundColor: props.mode === Unlimited ? \"#FFA987\" : \"transparent\",\n                '&:hover': {\n                  backgroundColor: '#FFA987',\n                },\n              }}>\n                Unlimited\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid xs={3}> \n            <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n              <IconButton size=\"large\" onClick={() => handleHelpOpen()}>\n                <HelpOutlineIcon />\n              </IconButton>\n              <IconButton size=\"large\" onClick={() => handleSettingsOpen()}>\n                <SettingsIcon />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Toolbar>\n    <HelpDialog open={helpOpen} onClose={handleHelpClose} onClick={handleHelpClose}/>\n    <SettingsDialog open={settingsOpen} onClose={handleSettingsClose} onClick={handleSettingsClose} setDifficultyMode={props.setDifficultyMode} setRuleSet={props.setRuleSet} mode={props.mode}/>\n  </AppBar>\n  );\n}\n\nexport default ToolBarView","import { useState } from 'react';\nimport { Grid, Paper, IconButton, Dialog, DialogTitle, DialogContent, Divider, Tooltip, Button } from '@mui/material'\nimport CloseIcon from '@mui/icons-material/Close';\nimport CheckIcon from '@mui/icons-material/Check';\nimport Draggable from \"react-draggable\";\nimport { isMobile } from 'react-device-detect';\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nconst ValidationModal = (props) => { \n\n  let validWords = []\n  let invalidWords = []\n  for (let word of props.foundWords) {\n    if (word.valid) {\n      validWords.push(\n          <Grid container justifyContent=\"center\"item sm={12}>\n            <CheckIcon color=\"success\" /> {word.word}\n          </Grid>\n      )\n    } else {\n      invalidWords.push(\n        <Grid container justifyContent=\"center\"item sm={12}>\n          <CloseIcon color=\"error\" /> {word.word}\n        </Grid>\n      )\n    }\n  }\n\n  const [toolTipOpen, setToolTipOpen] = useState(false);\n  const handleShareClick = () => {\n    setToolTipOpen(true)\n    navigator.clipboard.writeText(setCopyText())\n    setTimeout(() => {\n      setToolTipOpen(false);\n    }, \"500\");\n  }\n\n  const setCopyText = () => {\n    if (!props.open) {\n      return \"\"\n    }\n\n    let matrix = [];\n    for(let  i = 0;  i < 8; i++) {\n        matrix[i] = new Array(8).fill(\"⬛\");\n    }\n\n    const difficultyMode = localStorage.getItem(\"easyMode\") !== null ? localStorage.getItem(\"easyMode\") === \"true\" ? \"Easy Mode\" : \"Normal Mode\" : \"Normal Mode\"\n    const ruleSet = localStorage.getItem(\"officialRules\") !== null ? localStorage.getItem(\"officialRules\") === \"true\" ? \"Official Rules\" : \"Unofficial Rules\" : \"Unofficial Rules\"\n\n    props.tiles.forEach(tile => {\n      console.log(\"Tile\", tile.letter, tile.x, tile.y)\n      let x = tile.x\n      let y = tile.y\n      matrix[y-1][x] = \"🟩\"\n    })\n\n    let text = `QLess Game (https://tinyurl.com/qlessgame)\\n${difficultyMode} | ${ruleSet}\\n`\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 8; j++) {\n        text = text.concat(matrix[i][j])\n      }\n      text = text.concat(\"\\n\")\n    }\n\n    return text\n  }\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.andleClose}\n      PaperComponent={isMobile ? null : PaperComponent}\n      aria-labelledby=\"draggable-dialog-title\"\n      id=\"draggable-dialog-title\"\n      maxWidth=\"sm\"\n      fullWidth={true}\n    >\n      <DialogTitle style={{ cursor: \"move\" }}>\n        <IconButton\n          aria-label=\"close\"\n          onClick={props.handleClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        { validWords.length > 0 &&\n          <>\n            <Divider sx={{ m: 0, p: 2 }}>CORRECT WORDS</Divider>\n            <Grid container justify=\"center\" alignContent=\"center\" sm={12} spacing={3}>\n              {validWords}\n            </Grid>\n          </>\n        } \n        { invalidWords.length > 0 &&\n          <>\n            <Divider sx={{ m: 0, p: 2 }}>INCORRECT WORDS</Divider>\n            <Grid container justify=\"center\" alignContent=\"center\" sm={12} spacing={3}>\n              {invalidWords}\n            </Grid>\n          </>\n        }\n        { invalidWords.length === 0 &&\n          <>\n            <Divider sx={{ m: 2, p: 2 }}></Divider>\n            <Grid container justify=\"center\" alignContent=\"center\" sm={12}>\n              <Grid container justifyContent=\"center\"item sm={12}>\n                <Tooltip open={toolTipOpen} title=\"Copied\">\n                  <Button variant=\"contained\" sx={{backgroundColor: \"#FFA987\", width: 0.33}} onClick={() => handleShareClick()}>Share</Button>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </>\n        } \n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default ValidationModal","import { useState, useEffect } from 'react';\nimport { Grid, Button, Container, Popover, Typography } from '@mui/material'\nimport { areAllConnected, createTiles, getAllWords, resetTiles, shuffleTiles, generateRandomLetters } from \"../GameState\";\nimport Words from '../words.json'\nimport ValidationModal from '../components/ValidationModal';\nimport { Daily, NotAllConnected, NotAllOnBoard, NoTwoLetterWords, Unlimited } from '../constants';\n\nconst GameButtons = (props) => {\n\n  /**\n   * Generates new random letters and resets tiles\n   */\n  const createNewGame = () => {\n    let newLetters = generateRandomLetters()\n  \n    let tempTiles = createTiles(newLetters)\n  \n    props.setTiles({...tempTiles})\n    resetTiles({...tempTiles})\n    setFoundWords([])\n  }\n  \n  /**\n   * Moves all tiles back to bench\n   */\n  const setTilesBackToBench = () => {\n    let allStartingSpot = Object.values(props.tiles).every(tile => tile.y === 0)\n    if (allStartingSpot) {\n      return\n    }\n    let letters = Object.values(props.tiles).map(tile => tile.letter)\n    let tempTiles = createTiles(letters)\n  \n    props.setTiles({...tempTiles})\n    resetTiles({...tempTiles})\n  }\n  \n  /**\n   * Shuffles tiles still on bench\n   */\n  const shuffle = () => {\n    let x = Object.values(props.tiles).filter(tile => tile.y === 0).length\n    const spots = [...Array(x).keys()].sort(() => (Math.random() > 0.5) ? 1 : -1)\n    console.log(spots)\n  \n    let tempTiles = shuffleTiles(spots)\n    props.setTiles({...tempTiles})\n    resetTiles({...tempTiles})\n  }\n  \n  /**\n   * Validates all the letters on the board, connected and then opens\n   * modal showing which are spelling correct\n   */\n  const validate = (event) => {\n    let anyStartingSpot = Object.values(props.tiles).some(tile => tile.y === 0)\n    if (anyStartingSpot) {\n      setValidationError(NotAllOnBoard)\n      handlePopOverOpen(event)\n      return;\n    }\n  \n    let allConnected = areAllConnected(Object.values(props.tiles))\n    if (!allConnected) {\n      setValidationError(NotAllConnected)\n      handlePopOverOpen(event)\n      return;\n    }\n\n    const words = getAllWords(Object.values(props.tiles))\n\n    let twoLetterWords = words.some(word => word.length === 2)\n    let officialRules = localStorage.getItem(\"officialRules\") === \"true\"\n    if (twoLetterWords && officialRules) {\n      setValidationError(NoTwoLetterWords)\n      handlePopOverOpen(event)\n      return\n    }\n\n  \n    let checkedWords = []\n    words.forEach(word => {\n      console.log(`${word} | ${Words.hasOwnProperty(word)}`)\n      checkedWords.push({\n        word: word,\n        valid: Words.hasOwnProperty(word)\n      })\n    })\n  \n    setFoundWords(checkedWords)\n    handleValidationOpen()\n  }\n\n  const [popOverAnchor, setPopOverAnchor] = useState(null);\n\n  const handlePopOverOpen = (event) => {\n    setPopOverAnchor(event.currentTarget);\n  };\n\n  const handlePopOverClose = () => {\n    setPopOverAnchor(null);\n  };\n\n  const [validationError, setValidationError] = useState(null);\n\n  const [validationOpen, setValidationOpen] = useState(false);\n  const [foundWords, setFoundWords] = useState([]);\n\n  const handleValidationOpen = () => {\n    setValidationOpen(true);\n  };\n\n  const handleValidationClose = () => {\n    setValidationOpen(false);\n  };\n\n  useEffect(\n    () => {\n      createNewGame()\n    },\n    [props.difficultyMode],\n  );\n\n  \n\n  return (\n    <Container disableGutters maxWidth=\"sm\" component=\"main\" justifyContent=\"center\">\n      <Grid container maxWidth=\"sm\" spacing={3}>\n        { props.mode === Unlimited &&\n          <Grid container item md={3} justifyContent=\"center\">\n            <Button variant=\"contained\" sx={{backgroundColor: \"#E54B4B\", width: 1}} onClick={() => createNewGame()}>New Game</Button>\n          </Grid>\n        }\n        <Grid container item md={props.mode === Unlimited ? 3 : 4} justifyContent=\"center\">\n          <Button variant=\"contained\" sx={{backgroundColor: \"#FFA987\", width: 1}} onClick={() => setTilesBackToBench()}>Reset Tiles</Button>\n        </Grid>\n        <Grid container item md={props.mode === Unlimited ? 3 : 4} justifyContent=\"center\">\n          <Button variant=\"contained\" sx={{backgroundColor: \"#FFA987\", width: 1}} onClick={() => shuffle()}>Shuffle</Button>\n        </Grid>\n        <Grid container item md={props.mode === Unlimited ? 3 : 4} justifyContent=\"center\">\n          <Button variant=\"contained\" sx={{backgroundColor: \"#FFA987\", width: 1}} onClick={(event) => validate(event)}>Validate</Button>\n          <Popover\n            open={Boolean(popOverAnchor)}\n            anchorEl={popOverAnchor}\n            onClose={handlePopOverClose}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n          >\n            {validationError === NotAllConnected &&\n              <Typography sx={{ p: 2 }}>All tiles are not currently connected</Typography>\n            }\n            {validationError === NotAllOnBoard &&\n              <Typography sx={{ p: 2 }}>All tiles are not currently on the board</Typography>\n            }\n            {validationError === NoTwoLetterWords &&\n              <Typography sx={{ p: 2 }}>Official Rules enabled, two letter words are banned</Typography>\n            }\n          </Popover>\n        </Grid>\n      </Grid>\n      <ValidationModal open={validationOpen} handleClose={handleValidationClose} foundWords={foundWords} tiles={Object.values(props.tiles)} />\n    </Container>\n  )\n}\n\nexport default GameButtons","import React, { useState, useEffect } from \"react\";\nimport { CssBaseline, GlobalStyles } from '@mui/material'\nimport { observe } from \"../GameState\";\nimport GameArea from \"../components/GameArea\";\nimport GithubFooter from \"../components/GithubFooter\";\nimport ToolBarView from \"./ToolBarView\";\nimport GameButtons from \"./GameButtons\";\nimport { Unlimited } from \"../constants\";\n\n\nconst GameView = (props) => {\n  const [tiles, setTiles] = useState({...props.tiles});\n  useEffect(() => observe((newPos) => {\n    setTiles({...newPos})\n  }, tiles));\n\n  const [difficultyMode, setDifficultyMode] = useState(localStorage.getItem(\"easyMode\") !== null ? localStorage.getItem(\"easyMode\") === \"true\" && props.mode === Unlimited ? \"Easy Mode\" : \"Normal Mode\" : \"Normal Mode\")\n  const [ruleSet, setRuleSet] = useState(localStorage.getItem(\"officialRules\") !== null ? localStorage.getItem(\"officialRules\") === \"true\" ? \"Official Rules\" : \"Unofficial Rules\" : \"Unofficial Rules\")\n\n\n  return (\n    <React.Fragment>\n      <GlobalStyles styles={{ ul: { margin: 0, padding: 0, listStyle: 'none', }}} />\n      <CssBaseline />\n\n      <ToolBarView setDifficultyMode={setDifficultyMode} setRuleSet={setRuleSet} mode={props.mode}/>\n    \n      <GameArea tiles={Object.values(tiles)} difficultyMode={difficultyMode} ruleSet={ruleSet} mode={props.mode}/>\n\n      <GameButtons setTiles={setTiles} tiles={tiles} difficultyMode={difficultyMode} mode={props.mode}/>\n\n      <GithubFooter sx={{ mt: 5 }} />\n\n    </React.Fragment>\n  )\n}\n\nexport default GameView;","import { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { TouchBackend } from 'react-dnd-touch-backend'\nimport { createTiles, generateRandomLetters } from '../GameState';\nimport GameView from './GameView';\nimport { isMobile } from 'react-device-detect';\n\nconst AppView = (props) => {\n  console.log(\"Is Mobile\", isMobile)\n  return (\n    <DndProvider backend={isMobile ? TouchBackend : HTML5Backend}>\n      <GameView tiles={createTiles(generateRandomLetters())} mode={props.mode}/>\n    </DndProvider>\n  )\n}\n\nexport default AppView","import {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n} from \"react-router-dom\";\nimport { Daily, Unlimited } from \"./constants\";\nimport AppView from './views/AppView';\n\nfunction App() {\n\n  return (\n    <Router>\n      <Routes>\n        <Route exact path=\"/qless\" element={<AppView mode={Daily}/>} />\n        <Route exact path=\"/qless/unlimited\" element={<AppView mode={Unlimited}/>} />\n        <Route path=\"*\" element={<AppView mode={Daily} />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nif(module.hot){\n  module.hot.accept()\n}\n\nroot.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}