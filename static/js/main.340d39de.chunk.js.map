{"version":3,"sources":["constants.js","utils.js","GameState.js","components/Tile.js","components/Square.js","components/Board.js","components/TileBench.js","components/GameArea.js","components/GithubFooter.js","components/HelpDialog.js","components/SettingsDialog.js","views/ToolBarView.js","components/ValidationModal.js","views/GameButtons.js","views/GameView.js","views/AppView.js","App.js","index.js"],"names":["ItemTypes","Daily","Unlimited","NotAllConnected","NotAllOnBoard","NoTwoLetterWords","dailyLetters","getDate","Intl","DateTimeFormat","year","month","day","timeZone","format","Date","Array","prototype","swap","a","b","this","length","temp","range","n","from","x","i","matrix","y","rows","columns","map","row","slice","observer","letters","emitChange","resetTiles","tiles","getLetters","gameMode","date","getDailyLetters","generateRandomLetters","getRandomInt","max","Math","floor","random","easyMode","localStorage","getItem","charAt","createTiles","newLetters","currentDate","dailyTiles","JSON","parse","console","log","tempTiles","forEach","letter","id","String","getNeighbors","allTiles","tile","upNeighbor","downNeighbor","rightNeighbor","leftNeighbor","tempTile","getWordDown","down","getWordRight","right","getAllWords","words","up","left","word","push","Tile","props","useDrag","type","item","collect","monitor","isDragging","drag","useDrop","accept","drop","fromID","toID","fromX","fromY","toX","toY","swapTile","isOver","style","width","board","height","minWidth","maxWidth","minHeight","maxHeight","background","cursor","borderRadius","display","flexDirection","justifyContent","Box","alignItems","sx","ref","node","Typography","color","fontSize","fontWeight","TileBenchSquare","moveTile","backgroundColor","boxShadow","Board","squares","rowIndex","tempRow","val","index","element","Square","W","Stack","spacing","direction","renderBoardSquares","TileBench","firstRow","secondRow","value","paddingTop","GameArea","Container","disableGutters","component","pt","pb","difficultyMode","paddingLeft","paddingRight","ruleSet","GithubFooter","borderTop","theme","mt","py","variant","align","onClick","event","window","open","opacity","HelpDialog","Dialog","onClose","fullWidth","DialogTitle","m","p","IconButton","position","top","palette","grey","DialogContent","Divider","gutterBottom","Link","href","target","SettingsDialog","useState","mode","setEasyMode","useEffect","officalRules","setOfficalRules","textAlign","Switch","checked","disabled","onChange","setItem","setDifficultyMode","setRuleSet","ToolBarView","helpOpen","setHelpOpen","handleHelpClose","settingsOpen","setSettingsOpen","handleSettingsClose","nav","useNavigate","AppBar","elevation","borderBottom","divider","Toolbar","Grid","justify","container","xs","Button","disableRipple","replace","marginRight","size","PaperComponent","handle","cancel","Paper","ValidationModal","validWords","invalidWords","foundWords","valid","sm","stringify","toolTipOpen","setToolTipOpen","setCopyText","fill","modeText","Object","values","text","j","concat","andleClose","isMobile","handleClose","alignContent","Tooltip","title","navigator","clipboard","writeText","setTimeout","GameButtons","createNewGame","setTiles","setFoundWords","shuffle","filter","spots","keys","sort","shuffledSpots","pop","shuffleTiles","validate","some","setValidationError","handlePopOverOpen","examinedTiles","countConnect","includes","areAllConnected","twoLetterWords","officialRules","checkedWords","Words","hasOwnProperty","handleValidationOpen","popOverAnchor","setPopOverAnchor","currentTarget","validationError","validationOpen","setValidationOpen","md","every","setTilesBackToBench","Popover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","GameView","o","observe","newPos","Fragment","GlobalStyles","styles","ul","margin","padding","listStyle","CssBaseline","AppView","DndProvider","backend","TouchBackend","HTML5Backend","App","exact","path","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0KAAaA,EACL,OAEKC,EAAQ,QACRC,EAAY,YACZC,EAAkB,kBAClBC,EAAgB,gBAChBC,EAAmB,mBAEnBC,EAAe,CAC1B,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,WAAY,CACV,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,WAAY,CACV,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,WAAY,CACV,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,WAAY,CACV,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,WAAY,CACV,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,WAAY,CACV,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,WAAY,CACV,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,WAAY,CACV,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,WAAY,CACV,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KAEjB,YAAa,CACX,IAAK,IAAK,IAAK,IAC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","file":"static/js/main.340d39de.chunk.js","sourcesContent":["export const ItemTypes = {\n  TILE: 'tile'\n}\nexport const Daily = \"DAILY\"\nexport const Unlimited = \"UNLIMITED\"\nexport const NotAllConnected = \"NotAllConnected\"\nexport const NotAllOnBoard = \"NotAllOnBoard\"\nexport const NoTwoLetterWords = \"NoTwoLetterWords\"\n\nexport const dailyLetters = {\n  '5/11/2022': [\n    'C', 'N', 'L', 'Y',\n    'C', 'W', 'L', 'U',\n    'R', 'O', 'G', 'L'\n  ],\n  '5/12/2022': [\n    'J', 'K', 'M', 'Y',\n    'T', 'T', 'L', 'A',\n    'N', 'A', 'F', 'G'\n  ],\n  '5/13/2022': [\n    'B', 'Z', 'M', 'I',\n    'T', 'H', 'L', 'I',\n    'H', 'E', 'V', 'G'\n  ],\n  '5/14/2022': [\n    'D', 'K', 'L', 'I',\n    'C', 'P', 'L', 'A',\n    'R', 'E', 'P', 'L'\n  ],\n  '5/15/2022': [\n    'D', 'X', 'B', 'O',\n    'C', 'T', 'F', 'I',\n    'N', 'A', 'P', 'G'\n  ],\n  '5/16/2022': [\n    'D', 'K', 'B', 'O',\n    'C', 'H', 'L', 'U',\n    'N', 'A', 'F', 'L'\n  ],\n  '5/17/2022': [\n    'D', 'B', 'M', 'O',\n    'T', 'H', 'F', 'U',\n    'H', 'A', 'P', 'G'\n  ],\n  '5/18/2022': [\n    'C', 'K', 'Y', 'N',\n    'T', 'T', 'D', 'A',\n    'N', 'O', 'K', 'R'\n  ],\n  '5/19/2022': [\n    'C', 'K', 'Y', 'I',\n    'T', 'T', 'R', 'E',\n    'R', 'E', 'K', 'R'\n  ],\n  '5/20/2022': [\n    'J', 'N', 'L', 'I',\n    'S', 'T', 'L', 'I',\n    'H', 'O', 'F', 'R'\n  ],\n  '5/21/2022': [\n    'T', 'S', 'L', 'I',\n    'C', 'T', 'W', 'U',\n    'H', 'E', 'V', 'G'\n  ],\n  '5/22/2022': [\n    'C', 'B', 'L', 'N',\n    'T', 'P', 'L', 'O',\n    'R', 'E', 'P', 'G'\n  ],\n  '5/23/2022': [\n    'B', 'N', 'M', 'O',\n    'S', 'P', 'W', 'E',\n    'N', 'A', 'V', 'R'\n  ],\n  '5/24/2022': [\n    'C', 'Z', 'M', 'O',\n    'C', 'T', 'F', 'A',\n    'R', 'O', 'P', 'R'\n  ],\n  '5/25/2022': [\n    'J', 'N', 'M', 'Y',\n    'C', 'T', 'L', 'U',\n    'R', 'E', 'F', 'R'\n  ],\n  '5/26/2022': [\n    'J', 'N', 'B', 'I',\n    'M', 'P', 'D', 'A',\n    'N', 'A', 'V', 'R'\n  ],\n  '5/27/2022': [\n    'C', 'N', 'L', 'N',\n    'S', 'T', 'L', 'U',\n    'R', 'A', 'K', 'R'\n  ],\n  '5/28/2022': [\n    'J', 'Z', 'L', 'O',\n    'T', 'W', 'D', 'U',\n    'H', 'O', 'G', 'R'\n  ],\n  '5/29/2022': [\n    'J', 'N', 'Y', 'I',\n    'M', 'P', 'R', 'E',\n    'H', 'O', 'V', 'D'\n  ],\n  '5/30/2022': [\n    'J', 'B', 'L', 'O',\n    'C', 'H', 'L', 'A',\n    'H', 'A', 'V', 'R'\n  ],\n  '5/31/2022': [\n    'C', 'K', 'L', 'N',\n    'C', 'H', 'F', 'A',\n    'H', 'E', 'P', 'R'\n  ],\n  '6/1/2022': [\n    'J', 'K', 'M', 'Y',\n    'T', 'H', 'W', 'O',\n    'R', 'E', 'P', 'R'\n  ],\n  '6/2/2022': [\n    'T', 'X', 'M', 'I',\n    'C', 'T', 'F', 'U',\n    'R', 'A', 'K', 'R'\n  ],\n  '6/3/2022': [\n    'T', 'S', 'L', 'I',\n    'C', 'P', 'D', 'O',\n    'H', 'A', 'F', 'G'\n  ],\n  '6/4/2022': [\n    'T', 'B', 'B', 'Y',\n    'C', 'T', 'F', 'A',\n    'R', 'A', 'G', 'D'\n  ],\n  '6/5/2022': [\n    'D', 'K', 'L', 'I',\n    'C', 'P', 'F', 'I',\n    'H', 'E', 'P', 'L'\n  ],\n  '6/6/2022': [\n    'C', 'K', 'L', 'I',\n    'T', 'W', 'F', 'A',\n    'R', 'A', 'V', 'G'\n  ],\n  '6/7/2022': [\n    'J', 'N', 'L', 'O',\n    'C', 'T', 'L', 'U',\n    'R', 'A', 'V', 'R'\n  ],\n  '6/8/2022': [\n    'T', 'Z', 'L', 'O',\n    'S', 'T', 'W', 'O',\n    'H', 'E', 'P', 'G'\n  ],\n  '6/9/2022': [\n    'C', 'Z', 'L', 'O',\n    'S', 'T', 'L', 'U',\n    'H', 'O', 'G', 'D'\n  ],\n  '6/10/2022': [\n    'T', 'X', 'B', 'I',\n    'T', 'H', 'F', 'O',\n    'R', 'A', 'V', 'G'\n  ],\n  '6/11/2022': [\n    'D', 'X', 'Y', 'I',\n    'T', 'W', 'W', 'I',\n    'N', 'E', 'P', 'R'\n  ],\n  '6/12/2022': [\n    'T', 'S', 'M', 'I',\n    'M', 'H', 'L', 'I',\n    'H', 'A', 'G', 'R'\n  ],\n  '6/13/2022': [\n    'B', 'B', 'B', 'O',\n    'M', 'H', 'L', 'I',\n    'N', 'E', 'V', 'G'\n  ],\n  '6/14/2022': [\n    'C', 'X', 'L', 'O',\n    'T', 'H', 'L', 'O',\n    'H', 'O', 'P', 'D'\n  ],\n  '6/15/2022': [\n    'T', 'S', 'B', 'N',\n    'C', 'T', 'W', 'A',\n    'R', 'A', 'K', 'D'\n  ],\n  '6/16/2022': [\n    'D', 'Z', 'M', 'O',\n    'T', 'H', 'F', 'E',\n    'R', 'O', 'G', 'G'\n  ],\n  '6/17/2022': [\n    'C', 'Z', 'L', 'O',\n    'T', 'T', 'L', 'O',\n    'N', 'O', 'V', 'G'\n  ],\n  '6/18/2022': [\n    'T', 'K', 'Y', 'Y',\n    'T', 'T', 'R', 'E',\n    'H', 'O', 'F', 'G'\n  ],\n  '6/19/2022': [\n    'C', 'X', 'M', 'I',\n    'M', 'H', 'F', 'A',\n    'H', 'A', 'P', 'L'\n  ],\n  '6/20/2022': [\n    'J', 'Z', 'M', 'O',\n    'S', 'W', 'D', 'U',\n    'H', 'O', 'F', 'L'\n  ],\n  '6/21/2022': [\n    'T', 'B', 'M', 'O',\n    'S', 'P', 'L', 'O',\n    'N', 'O', 'P', 'R'\n  ],\n  '6/22/2022': [\n    'T', 'K', 'L', 'N',\n    'T', 'T', 'L', 'E',\n    'H', 'E', 'G', 'L'\n  ],\n  '6/23/2022': [\n    'J', 'S', 'B', 'Y',\n    'T', 'T', 'R', 'A',\n    'R', 'E', 'F', 'D'\n  ],\n  '6/24/2022': [\n    'C', 'X', 'Y', 'O',\n    'S', 'T', 'L', 'U',\n    'R', 'E', 'K', 'G'\n  ],\n  '6/25/2022': [\n    'T', 'K', 'M', 'O',\n    'S', 'H', 'W', 'U',\n    'R', 'O', 'P', 'D'\n  ],\n  '6/26/2022': [\n    'B', 'S', 'B', 'O',\n    'S', 'T', 'W', 'I',\n    'N', 'A', 'F', 'R'\n  ],\n  '6/27/2022': [\n    'D', 'Z', 'L', 'I',\n    'T', 'P', 'L', 'E',\n    'R', 'E', 'P', 'R'\n  ],\n  '6/28/2022': [\n    'C', 'Z', 'Y', 'N',\n    'C', 'W', 'L', 'I',\n    'N', 'A', 'V', 'G'\n  ],\n  '6/29/2022': [\n    'J', 'Z', 'M', 'O',\n    'S', 'T', 'L', 'O',\n    'R', 'E', 'P', 'G'\n  ],\n  '6/30/2022': [\n    'C', 'B', 'B', 'I',\n    'S', 'H', 'F', 'U',\n    'N', 'E', 'F', 'G'\n  ],\n  '7/1/2022': [\n    'D', 'Z', 'M', 'I',\n    'C', 'P', 'D', 'U',\n    'R', 'E', 'P', 'L'\n  ],\n  '7/2/2022': [\n    'B', 'Z', 'M', 'O',\n    'T', 'W', 'L', 'O',\n    'R', 'O', 'G', 'G'\n  ],\n  '7/3/2022': [\n    'T', 'B', 'M', 'N',\n    'C', 'T', 'W', 'E',\n    'R', 'A', 'P', 'D'\n  ],\n  '7/4/2022': [\n    'D', 'B', 'M', 'Y',\n    'S', 'H', 'L', 'A',\n    'N', 'A', 'F', 'R'\n  ],\n  '7/5/2022': [\n    'B', 'X', 'L', 'Y',\n    'C', 'H', 'D', 'U',\n    'R', 'O', 'V', 'R'\n  ],\n  '7/6/2022': [\n    'J', 'N', 'M', 'I',\n    'C', 'T', 'D', 'U',\n    'H', 'A', 'V', 'D'\n  ],\n  '7/7/2022': [\n    'C', 'X', 'L', 'I',\n    'T', 'H', 'R', 'A',\n    'H', 'O', 'V', 'G'\n  ],\n  '7/8/2022': [\n    'B', 'X', 'Y', 'O',\n    'S', 'W', 'W', 'O',\n    'R', 'A', 'K', 'R'\n  ]\n}","/**\n * Array.prototype.swap\n * Rearrange an array to swap the positions of two elements.\n * @param {Number} a - the index of the first element to swap.\n * @param {Number} b - the index of the second element to swap.\n * @returns {Array}\n * @example\n * // returns [ 'a', 'c', 'b' ]\n * [ 'a', 'b', 'c' ].swap(1, 2)\n */\n Array.prototype.swap = function (a, b) {\n  if ( b >= this.length || b < 0 ) return this;\n\n  // Temporary variable to hold data while we juggle\n  let temp = this[a];\n  this[a] = this[b];\n  this[b] = temp;\n  return this;\n};\n\n/**\n * Array.range\n * Create a new array of length n, where the elements are numbers\n * from 0 to n - 1.\n * @param {Number} n - the desired length of the range.\n * @returns {Array}\n * @example\n * // returns [ 0, 1, 2, 3 ]\n * Array.range(4);\n */\nArray.range = n => Array.from(new Array(n), (x,i) => i);\n\n/**\n * Array.matrix\n * Create a new two-dimensional array, where each element is its own index.\n * @param {Number} x - the desired number of columns (possible x values)\n * @param {Number} y - the desired number of rows (possible y values)\n * @returns {Array}\n * @example\n * // returns [\n * //   [ 0, 1, 2 ],\n * //   [ 0, 1, 2 ]\n * // ]\n * Array.matrix(3, 2);\n */\nArray.matrix = (x, y) => {\n  const rows = Array.range(y);\n  const columns = Array.range(x);\n  return rows.map( (row, i) => columns.slice() );\n}\n\nexport function getDate() {\n  const options = {\n    year: 'numeric', month: 'numeric', day: 'numeric',\n    timeZone: 'America/New_York'\n  };\n  return Intl.DateTimeFormat('en-US', options).format(new Date())\n}","import { Daily, dailyLetters } from './constants';\nimport { getDate } from './utils';\nimport Words from './words.json'\n\nlet letters = {}\nlet observer;\n\n/**\n  PROPOGATE CHANGES\n*/\n\nfunction emitChange() {\n  observer(letters)\n}\n\nexport function observe(o, tiles) {\n  observer = o\n  letters = tiles\n}\n\nexport function moveTile(toX, toY, item) {\n  letters[item.id] = {\n    ...letters[item.id],\n    x: toX,\n    y: toY,\n  }\n  emitChange();\n}\n\nexport function swapTile(fromID, toID) {\n  let fromX = letters[fromID].x;\n  let fromY = letters[fromID].y;\n\n  let toX = letters[toID].x;\n  let toY = letters[toID].y;\n\n  letters[fromID] = {\n    ...letters[fromID],\n    x: toX,\n    y: toY\n  }\n\n  letters[toID] = {\n    ...letters[toID],\n    x: fromX,\n    y: fromY\n  }\n  emitChange()\n}\n\nexport function canDropTile(squareX, squareY, item) {\n  let allStartingSpot = Object.values(letters).every(tile => tile.y === 0)\n\n  let nextToExistingLetter = false\n  Object.values(letters).forEach(tile => {\n    if (tile.y !== 0 && tile.id !== item.id && ((Math.abs(tile.x - squareX) === 1 &&  Math.abs(tile.y - squareY) === 0) || (Math.abs(tile.y - squareY) === 1 && Math.abs(tile.x - squareX) === 0))) {\n      nextToExistingLetter = true\n    }\n  })\n\n\n  let [tile, up, down, left, right] = getNeighborsById(Object.values(letters), item.id);\n  let connectingPiece = (((up && down) || (left && right)) && tile.y !== 0);\n\n  return (allStartingSpot || nextToExistingLetter) && !connectingPiece\n}\n\nexport function resetTiles(tiles) {\n    letters = tiles\n}\n\nexport function getLetters(gameMode) {\n  if (gameMode === Daily) {\n    return getDailyLetters()\n  }\n  return generateRandomLetters()\n}\n\nfunction getDailyLetters() {\n  const date = getDate()\n\n  return dailyLetters[date]\n}\n\n/*\n  GENERATE RANDOM LETTERS\n*/\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\n/**\n * Hard Mode\n * AAA BBB CCCC DDD EEEE FF GGG HHHH III J KK LLLLL MMM NNNN OOOOO PPP RRRR SS TTTTT UU V WW X YY Z\n * Easy Mode\n * AAAA BBB CCCC DDD EEEEE FF GGG HHHH III J KK LLLLL MMM NNNN OOOOO PPP RRRR SSSS TTTTT UU WW Y\n */\nexport function generateRandomLetters() {\n\n  let easyMode = localStorage.getItem(\"easyMode\") !== null ? localStorage.getItem(\"easyMode\") === \"true\" : false\n  \n  let one = \"CCDTBJ\".charAt(getRandomInt(6))\n  let two = easyMode ? \"SSBNSK\".charAt(getRandomInt(6)) : \"XZBNSK\".charAt(getRandomInt(6))\n  let three = \"YMLBML\".charAt(getRandomInt(6))\n  let four = easyMode ? \"OEIOIN\".charAt(getRandomInt(6)) : \"ONIOIY\".charAt(getRandomInt(6))\n  let five = \"MCCTTS\".charAt(getRandomInt(6))\n  let six = \"HPTHTW\".charAt(getRandomInt (6))\n  let seven = \"RLLFDW\".charAt(getRandomInt(6))\n  let eight = \"EAOUUI\".charAt(getRandomInt(6))\n  let nine = \"RHNHNR\".charAt(getRandomInt(6))\n  let ten = \"OEAEAO\".charAt(getRandomInt(6))\n  let eleven = easyMode ? \"KPFPGA\".charAt(getRandomInt(6)) : \"KPFVPG\".charAt(getRandomInt(6))\n  let twelve = \"GDGRRL\".charAt(getRandomInt (6))\n\n  let letters = [one, two, three, four, five, six, seven, eight, nine, ten, eleven, twelve]\n\n  return letters\n}\n\nexport function createTiles(newLetters, gameMode) {\n  if (gameMode === Daily) {\n    const currentDate = getDate()\n    let dailyTiles = localStorage.getItem(\"dailyTiles\")\n\n    dailyTiles = dailyTiles ? JSON.parse(dailyTiles) : null\n\n    console.log(dailyTiles)\n\n    if (dailyTiles && currentDate === dailyTiles.date) {\n      return dailyTiles.tiles\n    }\n  }\n\n\n  let tempTiles = {}\n  newLetters.forEach((letter, i) => {\n    tempTiles[i] = {\n      x: i,\n      y: 0,\n      letter,\n      id: String(i)\n    }\n  })\n  return tempTiles\n}\n\nexport function shuffleTiles(shuffledSpots) {\n  let tempTiles = {}\n  for (let i = 0; i < Object.values(letters).length; i++) {\n    tempTiles[i] = {\n      ...letters[i]\n    }\n\n    if (tempTiles[i].y === 0) {\n      tempTiles[i].x = shuffledSpots.pop()\n    }\n\n  }\n\n  return tempTiles\n}\n\n/*\n  FIND LETTERS IN GRID\n*/\nexport function areAllConnected(tiles) {\n  let examinedTiles = []\n\n  let countConnect = (function (tile) {\n    const [up, down, left, right] = getNeighbors(tiles, tile)\n    if (up && !examinedTiles.includes(up.id) ) {\n      examinedTiles.push(up.id)\n      countConnect(up)\n    }\n    if (down && !examinedTiles.includes(down.id)) {\n      examinedTiles.push(down.id)\n      countConnect(down)\n    }\n    if (left && !examinedTiles.includes(left.id)) {\n      examinedTiles.push(left.id)\n      countConnect(left)\n    }\n    if (right && !examinedTiles.includes(right.id)) {\n      examinedTiles.push(right.id)\n      countConnect(right)\n    }\n  })\n\n  countConnect(tiles[0])\n\n  return examinedTiles.length === 12\n}\n\nfunction getNeighborsById(allTiles, id) {\n  let tile = allTiles.filter(t => t.id === id)[0]\n  return [tile, ...getNeighbors(allTiles, tile)]\n}\n\nfunction getNeighbors(allTiles, tile) {\n  let upNeighbor = null;\n  let downNeighbor = null;\n  let rightNeighbor = null;\n  let leftNeighbor = null;\n  allTiles.forEach(tempTile => {\n    \n    if (tempTile.x === tile.x && tempTile.y - tile.y === -1) {\n      upNeighbor = tempTile\n    }\n    \n    if (tempTile.x === tile.x && tempTile.y - tile.y === 1) {\n      downNeighbor = tempTile\n    }\n    \n    if (tempTile.x - tile.x === 1 && tempTile.y  ===tile.y) {\n      rightNeighbor = tempTile\n    }\n    \n    if (tempTile.x - tile.x === -1 && tempTile.y  ===tile.y) {\n      leftNeighbor = tempTile\n    }\n  })\n  return [upNeighbor, downNeighbor, leftNeighbor, rightNeighbor];\n}\n\nfunction getWordDown(allTiles, tile) {\n  const [, down, , ] = getNeighbors(allTiles, tile)\n  if (!down) {\n    return tile.letter\n  }\n  return `${tile.letter}${getWordDown(allTiles, down)}`\n}\n\nfunction getWordRight(allTiles, tile) {\n  const [, , , right] = getNeighbors(allTiles, tile)\n  if (!right) {\n    return tile.letter\n  }\n  return `${tile.letter}${getWordRight(allTiles, right)}`\n}\n\n\nexport function getAllWords(allTiles) {\n  let words = []\n\n  allTiles.forEach(tile => {\n    const [up, down, left, right] = getNeighbors(allTiles, tile)\n\n    if (down && !up) {\n      console.log(`Found starting letter ${tile.letter}, getting word in DOWN direction`)\n      let word = getWordDown(allTiles, tile)\n      words.push(word)\n      console.log(`FOUND WORD ${word}`)\n    }\n\n    if (right && !left) {\n      console.log(`Found starting letter ${tile.letter}, getting word in RIGHT direction`)\n      let word = getWordRight(allTiles, tile)\n      words.push(word)\n      console.log(`FOUND WORD ${word}`)\n    }\n  })\n  return words\n}\n\n/*\n  SOLVE\n*/\nexport function generateMatches(letters) {\n\n  let allPossible = getPermutationsAllLengths(letters)\n  let results = [];\n\n  for (let i = 0; i < allPossible.length; i++) {\n    if (Words.hasOwnProperty(allPossible[i].toUpperCase())) {\n      results.push(allPossible[i].toUpperCase());\n    }\n  }\n  // filter out duplicates and sort by length\n  results = [...new Set(results)].sort((a, b) => b.length - a.length);\n};\n\n// find all permutations of an array\nfunction swap(array, i, j) {\n  if (i !== j) {\n    let swap = array[i];\n    array[i] = array[j];\n    array[j] = swap;\n  }\n};\n\nfunction permute_rec(res, str, array) {\n  if (array.length === 0 && Words.hasOwnProperty(str)) {\n    res.push(str);\n  } else {\n    for (let i = 0; i < array.length; i++) {\n      swap(array, 0, i);\n      permute_rec(res, str + array[0], array.slice(1));\n      swap(array, 0, i);\n    }\n  }\n};\n\nfunction xpermute_rec(res, sub, array) {\n  if (array.length === 0) {\n    console.log(res)\n    if (sub.length >= 5) permute_rec(res, \"\", sub);\n  } else {\n    xpermute_rec(res, sub, array.slice(1));\n    xpermute_rec(res, sub.concat(array[0]), array.slice(1));\n  }\n};\n\n// find all permutations for all lengths\nfunction getPermutationsAllLengths(array) {\n  let res = [];\n  xpermute_rec(res, [], array);\n  return res;\n};","import React from \"react\";\nimport { ItemTypes } from '../constants'\nimport { useDrag, useDrop } from 'react-dnd'\nimport { swapTile } from \"../GameState\";\nimport { Box, Typography } from \"@mui/material\";\n\nconst Tile = (props) => {\n\n    const [{ isDragging }, drag] = useDrag(() => ({\n        type: ItemTypes.TILE,\n        item: () => {\n          return {id: props.id}\n        },\n        collect: (monitor) => ({\n            isDragging: !!monitor.isDragging()\n          })\n      }))\n\n    const [{ isOver }, drop] = useDrop(() => ({\n        accept: ItemTypes.TILE,\n        drop: (item, monitor) => {\n          swapTile(item.id, props.id)\n        },\n        collect: monitor => ({\n          isOver: !!monitor.isOver(),\n        }),\n      }), [props.x, props.y])\n\n\n    let style = {\n      width: props.board ? '8vw' : '4vw',\n      height: props.board ? '8vw' : '4vw',\n      minWidth: props.board ? \"3rem\" : \"2.5rem\",\n      maxWidth: props.board ? \"4rem\" : \"2.5rem\",\n      minHeight: props.board ? \"3rem\" : \"2.5rem\",\n      maxHeight: props.board ? \"4rem\" : \"2.5rem\",\n      background: \"#FFA987\",\n      cursor: \"move\",\n      borderRadius: \"5px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n    }\n\n    return (\n      <Box\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        sx={style}\n        ref={(node) => drag(drop(node))}\n      >\n        <Typography sx={{\n          color: \"#444140\",\n          fontSize: \"1rem\",\n          fontWeight: 700,\n        }}>\n          {props.letter}\n        </Typography>  \n      </Box>\n    );\n  }\n  \n  export default Tile;","import React from \"react\";\nimport { Box } from \"@mui/material\";\nimport { ItemTypes } from '../constants'\nimport { useDrop } from 'react-dnd'\nimport { moveTile } from \"../GameState\";\n\nconst TileBenchSquare = (props) => {\n  const [{ isOver }, drop] = useDrop(() => ({\n    accept: ItemTypes.TILE,\n    drop: (item, monitor) => {\n      console.log(\"Dropped items props\", item)\n      moveTile(props.x, props.y, item)\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver(),\n    }),\n  }), [props.x, props.y])\n\n  let style = {\n    width: props.board ? '8vw' : '4vw',\n    height: props.board ? '8vw' : '4vw',\n    minWidth: \"3rem\",\n    maxWidth: props.board ? \"4rem\" : \"2.5rem\",\n    minHeight: \"3rem\",\n    maxHeight: props.board ? \"4rem\" : \"2.5rem\",\n    backgroundColor: \"#444140\",\n    boxShadow: \"inset 0px 0px 0px 1px #F4E5E1\",\n  }\n  if (isOver) {\n    style.background = \"rgb(87, 155, 87)\"\n  }\n\n  return <Box\n    sx={style}\n    ref={drop}\n  />\n\n}\n  \n  export default TileBenchSquare;","import React from \"react\";\nimport utils from '../utils';\nimport Tile from \"./Tile\";\nimport Square from \"./Square\";\nimport { Stack } from '@mui/material';\n\nconst BOARD_WIDTH = 8;\nconst BOARD_HEIGHT = 8;\n\nconst Board = (props) => {\n\n  function renderBoardSquares(tiles) {\n    const matrix = Array.matrix(BOARD_WIDTH, BOARD_HEIGHT);\n\n    let squares = []\n\n    matrix.forEach((row, rowIndex) => {\n      let tempRow = []\n\n      row.forEach((val, index) => {\n\n        let element = <Square\n          x={index}W\n          y={rowIndex+1}\n          key={`board-${index}${rowIndex}`}\n          board={true}\n        />\n\n        tiles.forEach(tile => {\n          if (tile.x === index && tile.y === rowIndex+1) {\n            element = <Tile key={`tile-${tile.id}`} {...tile} board={true}/>\n          }\n        })\n        tempRow.push(element)\n      })\n      squares.push(\n      <Stack spacing={0} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n          {tempRow}\n      </Stack>\n      )\n    })\n    return squares;\n  };\n\n  return renderBoardSquares(props.tiles)\n}\n\nexport default Board;","import React from \"react\";\nimport Tile from \"./Tile\";\nimport Square from \"./Square\";\nimport Stack from '@mui/material/Stack';\nimport { Container } from \"@mui/material\";\n\nconst BOARD_WIDTH = 12;\nconst BOARD_HEIGHT = 1;\n\nconst TileBench = (props) => { \n\n  function renderBoardSquares(tiles) {\n    const matrix = Array.matrix(BOARD_WIDTH, BOARD_HEIGHT);\n\n    let firstRow = []\n    let secondRow = []\n\n    matrix.forEach((row, rowIndex) => {\n      row.forEach((value, index) => {\n        tiles.forEach(tile => {\n          if (tile.x === index && tile.y === rowIndex) {\n            if ( index <= 5) {\n              firstRow.push(<Tile key={`tile-${tile.id}`} {...tile} board={false} />)\n            } else {\n              secondRow.push(<Tile key={`tile-${tile.id}`} {...tile} board={false} />)\n            }\n          }\n        })\n      })\n    })\n\n    return (\n      <>\n        <Stack spacing={3} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n            {firstRow}\n        </Stack>\n        <Stack spacing={3} direction=\"row\" justifyContent=\"center\" alignItems=\"center\" sx={{paddingTop: '10px'}}>\n            {secondRow}\n        </Stack>\n      </>\n    )\n  };\n\n  return renderBoardSquares(props.tiles)\n}\n\nexport default TileBench;","import React from \"react\";\nimport { Container, Stack, Typography } from \"@mui/material\";\nimport Board from \"./Board\";\nimport TileBench from \"./TileBench\";\n\nconst GameArea = (props) => {\n\n  return (\n    <Container disableGutters maxWidth=\"md\" component=\"main\" sx={{ pt: 0, pb: 0 }}>\n      <Container disableGutters maxWidth=\"lg\" component=\"main\" sx={{ pt: 2, pb: 0 }}>\n        <Stack spacing={0} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n          <Typography sx={{\n            fontWeight: 'bold',\n            fontSize: '1rem'\n          }}>\n            {props.difficultyMode}\n          </Typography>\n          <Typography sx={{\n            paddingLeft: 2,\n            paddingRight: 2\n          }}>\n            |\n          </Typography>\n          <Typography sx={{\n            fontWeight: 'bold',\n            fontSize: '1rem'\n          }}>\n            {props.ruleSet}\n          </Typography>\n        </Stack>\n        <Board tiles={props.tiles}/>\n      </Container>\n      <Container disableGutters maxWidth=\"md\" component=\"main\" sx={{ pt: 2, pb: 6 }}>\n        <TileBench tiles={props.tiles}/>  \n      </Container>\n    </Container>\n  );\n}\n  \nexport default GameArea;","import GitHubIcon from '@mui/icons-material/GitHub';\nimport { Typography, Container, Divider } from '@mui/material/';\n\nconst GithubFooter = () => {\n  return (\n    <Container\n      maxWidth=\"sm\"\n      sx={{\n        borderTop: (theme) => `1px solid #555a5e`,\n        mt: 8,\n        py: [3, 6],\n        width: \"64vw\", maxWidth: \"32rem\", minWidth: \"8rem\"\n      }}\n    >\n      <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n          <GitHubIcon \n          onClick={event =>  window.open('https://github.com/ESattler/qless/', '_blank')}\n          sx={{\n            fontSize: 50,\n            '&:hover': {\n              opacity: 0.5\n            }\n          }} />\n      </Typography>\n    </Container>\n  );\n}\n\nexport default GithubFooter;","import {Typography, IconButton, Dialog, DialogTitle, DialogContent, Link, Divider } from '@mui/material'\nimport CloseIcon from '@mui/icons-material/Close';\n\n\nconst HelpDialog = (props) => {\n  return (\n    <Dialog\n      onClose={props.onClose}\n      aria-labelledby=\"customized-dialog-title\"\n      open={props.open}\n      maxWidth=\"sm\"\n      fullWidth={true}\n    >\n      <DialogTitle sx={{ m: 0, p: 2 }}>\n          <IconButton\n            aria-label=\"close\"\n            onClick={props.onClick}\n            sx={{\n              position: 'absolute',\n              right: 8,\n              top: 8,\n              color: (theme) => theme.palette.grey[500],\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <Divider sx={{ m: 0, p: 2, fontWeight: \"bold\" }}>HISTORY</Divider>\n        <Typography gutterBottom>\n          QLess is based on the dice game of a similar name. The Q-Less dice game was created by Tom Sturdevant\n          and can be bought from the <Link href=\"https://www.q-lessgame.com/\" target=\"_blank\">Q-Less website</Link>.\n        </Typography>\n        <Divider sx={{ m: 0, p: 2, fontWeight: \"bold\" }}>HOW TO PLAY</Divider>\n        <Typography gutterBottom>\n          The goal of the game is to create a board of interconnecting words using twelve randomized letters.\n          All words are validated using the 2019 official Scrabble® dictionary.\n        </Typography>\n        <Divider sx={{ m: 0, p: 2, fontWeight: \"bold\" }}>RULE CHANGES</Divider>\n        <Typography gutterBottom>\n          This game differs from the official Q-Less game in that it allows the use of two letter words.\n          In the settings you can turn on the official ruleset which will ban two letter words.\n        </Typography>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default HelpDialog","import { useEffect, useState } from 'react';\nimport {Typography, IconButton, Dialog, DialogTitle, DialogContent, Switch, Divider, Box } from '@mui/material'\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Daily, Unlimited } from '../constants';\n\n\nconst SettingsDialog = (props) => {\n\n  const [easyMode, setEasyMode] = useState(localStorage.getItem(\"easyMode\") !== null ? localStorage.getItem(\"easyMode\") === \"true\" && props.mode === Unlimited : false);\n\n  const handleEasyModeChange = (event) => {\n    localStorage.setItem(\"easyMode\", event.target.checked)\n    setEasyMode(event.target.checked)\n    event.target.checked ? props.setDifficultyMode(\"Easy Mode\") : props.setDifficultyMode(\"Normal Mode\")\n\n  };\n\n  useEffect(() => {\n    if (props.mode === Daily) {\n      setEasyMode(false)\n    } else {\n      setEasyMode(localStorage.getItem(\"easyMode\") !== null ? localStorage.getItem(\"easyMode\") === \"true\" && props.mode === Unlimited : false)\n    }\n  }, [props.mode])\n\n  const [officalRules, setOfficalRules] = useState(localStorage.getItem(\"officialRules\") !== null ? localStorage.getItem(\"officialRules\") === \"true\" : false);\n\n  const handleOfficialRulesChange = (event) => {\n    localStorage.setItem(\"officialRules\", event.target.checked)\n    setOfficalRules(event.target.checked)\n    event.target.checked ? props.setRuleSet(\"Official Rules\") : props.setRuleSet(\"Unofficial Rules\")\n  };\n\n  return (\n    <Dialog\n      onClose={props.onClose}\n      aria-labelledby=\"customized-dialog-title\"\n      open={props.open}\n      maxWidth=\"xs\"\n      fullWidth={true}\n    >\n      <DialogTitle sx={{ m: 0, p: 2 }}>\n          <IconButton\n            aria-label=\"close\"\n            onClick={props.onClick}\n            sx={{\n              position: 'absolute',\n              right: 8,\n              top: 8,\n              color: (theme) => theme.palette.grey[500],\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <Divider sx={{ m: 0, p: 2, fontWeight: \"bold\" }}>EASY MODE</Divider>\n        <Box textAlign='center'>\n          <Typography>\n            Guaranteed three vowels and removes V/X/Z from letter pool. Not available in DAILY mode.\n          </Typography>\n          <Switch checked={easyMode} disabled={props.mode === Daily} onChange={handleEasyModeChange}/>\n        </Box>\n        <Divider sx={{ m: 0, p: 2, fontWeight: \"bold\" }}>OFFICIAL RULES</Divider>\n        <Box textAlign='center'>\n          <Typography>\n            Bans two letter words\n          </Typography>\n          <Switch checked={officalRules} onChange={handleOfficialRulesChange}/>\n        </Box>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default SettingsDialog;","\nimport { useState } from \"react\";\nimport { Typography, IconButton, AppBar, Toolbar, Button, Grid} from '@mui/material'\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\nimport HelpDialog from '../components/HelpDialog';\nimport SettingsDialog from \"../components/SettingsDialog\";\nimport { Daily, Unlimited } from \"../constants\";\nimport { useNavigate } from 'react-router-dom'\n\nconst ToolBarView = (props) => {\n\n  const [helpOpen, setHelpOpen] = useState(false);\n  const handleHelpOpen = () => {\n    setHelpOpen(true);\n  };\n\n  const handleHelpClose = () => {\n    setHelpOpen(false);\n  };\n\n  const [settingsOpen, setSettingsOpen] = useState(false);\n  const handleSettingsOpen = () => {\n    setSettingsOpen(true);\n  };\n\n  const handleSettingsClose = () => {\n    setSettingsOpen(false);\n  };\n\n  let nav = useNavigate();\n\n  return (\n    <AppBar\n      position=\"static\"\n      color=\"default\"\n      elevation={0}\n      sx={{ borderBottom: (theme) => `1px solid ${theme.palette.divider}`}}\n    >\n      <Toolbar justifyContent=\"center\" alignItems=\"center\" sx={{justifyContent: \"center\", alignItems: \"center\"}}>\n        <Grid maxWidth=\"sm\" justify={\"space-between\"} container>\n          <Grid xs={3} container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n            <Typography sx={{fontWeight: 700, color: \"#444140\",}}>QLESS</Typography>\n          </Grid>\n          <Grid xs={6} container direction=\"row\" justifyContent=\"left\" alignItems=\"center\">\n            <Grid container direction=\"row\" justifyContent=\"left\" alignItems=\"center\">\n              <Button disableRipple onClick={() => nav(\"/qless\", { replace: true })} variant=\"text\" sx={{\n                borderRadius: \"10px\",\n                color: \"#444140\",\n                fontWeight: 500,\n                backgroundColor: props.mode === Daily ? \"#FFA987\" : \"transparent\",\n                '&:hover': {\n                  backgroundColor: '#FFA987',\n                },\n                marginRight: \"10px\"\n              }}>\n                Daily\n              </Button>\n              <Button disableRipple onClick={() => nav(\"/qless/unlimited\", { replace: true })} variant=\"text\" sx={{\n                borderRadius: \"10px\",\n                color: \"#444140\",\n                fontWeight: 500,\n                backgroundColor: props.mode === Unlimited ? \"#FFA987\" : \"transparent\",\n                '&:hover': {\n                  backgroundColor: '#FFA987',\n                },\n              }}>\n                Unlimited\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid xs={3}> \n            <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n              <IconButton size=\"large\" onClick={() => handleHelpOpen()}>\n                <HelpOutlineIcon />\n              </IconButton>\n              <IconButton size=\"large\" onClick={() => handleSettingsOpen()}>\n                <SettingsIcon />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Toolbar>\n    <HelpDialog open={helpOpen} onClose={handleHelpClose} onClick={handleHelpClose}/>\n    <SettingsDialog open={settingsOpen} onClose={handleSettingsClose} onClick={handleSettingsClose} setDifficultyMode={props.setDifficultyMode} setRuleSet={props.setRuleSet} mode={props.mode}/>\n  </AppBar>\n  );\n}\n\nexport default ToolBarView","import { useState } from 'react';\nimport { Grid, Paper, IconButton, Dialog, DialogTitle, DialogContent, Divider, Tooltip, Button } from '@mui/material'\nimport CloseIcon from '@mui/icons-material/Close';\nimport CheckIcon from '@mui/icons-material/Check';\nimport Draggable from \"react-draggable\";\nimport { isMobile } from 'react-device-detect';\nimport { Daily, Unlimited } from '../constants';\nimport { getDate } from '../utils';\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nconst ValidationModal = (props) => { \n\n  let validWords = []\n  let invalidWords = []\n  for (let word of props.foundWords) {\n    if (word.valid) {\n      validWords.push(\n          <Grid container justifyContent=\"center\"item sm={12}>\n            <CheckIcon color=\"success\" /> {word.word}\n          </Grid>\n      )\n    } else {\n      invalidWords.push(\n        <Grid container justifyContent=\"center\"item sm={12}>\n          <CloseIcon color=\"error\" /> {word.word}\n        </Grid>\n      )\n    }\n  }\n\n  if (props.mode === Daily && invalidWords.length === 0 && props.open) {\n    localStorage.setItem(\"dailyTiles\", JSON.stringify({\n      tiles: props.tiles,\n      date: getDate()\n    }))\n  }\n\n  const [toolTipOpen, setToolTipOpen] = useState(false);\n  const handleShareClick = () => {\n    setToolTipOpen(true)\n    navigator.clipboard.writeText(setCopyText())\n    setTimeout(() => {\n      setToolTipOpen(false);\n    }, \"500\");\n  }\n\n  const setCopyText = () => {\n    if (!props.open) {\n      return \"\"\n    }\n\n    let matrix = [];\n    for(let  i = 0;  i < 8; i++) {\n        matrix[i] = new Array(8).fill(\"⬛\");\n    }\n\n    const difficultyMode = localStorage.getItem(\"easyMode\") !== null ? localStorage.getItem(\"easyMode\") === \"true\" && props.mode === Unlimited ? \"Easy Mode\" : \"Normal Mode\" : \"Normal Mode\"\n    const ruleSet = localStorage.getItem(\"officialRules\") !== null ? localStorage.getItem(\"officialRules\") === \"true\" ? \"Official Rules\" : \"Unofficial Rules\" : \"Unofficial Rules\"\n\n    Object.values(props.tiles).forEach(tile => {\n      console.log(\"Tile\", tile.letter, tile.x, tile.y)\n      let x = tile.x\n      let y = tile.y\n      matrix[y-1][x] = \"🟩\"\n    })\n\n    let modeText\n    if (props.mode === Daily) {\n      modeText = `Daily (${getDate()})`\n    }\n    else {\n      modeText = \"Unlimited\"\n    }\n\n    let text = `QLess Game (https://tinyurl.com/qlessgame)\\n${difficultyMode} | ${ruleSet} | ${modeText}\\n`\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 8; j++) {\n        text = text.concat(matrix[i][j])\n      }\n      text = text.concat(\"\\n\")\n    }\n\n    return text\n  }\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.andleClose}\n      PaperComponent={isMobile ? null : PaperComponent}\n      aria-labelledby=\"draggable-dialog-title\"\n      id=\"draggable-dialog-title\"\n      maxWidth=\"sm\"\n      fullWidth={true}\n    >\n      <DialogTitle style={{ cursor: \"move\" }}>\n        <IconButton\n          aria-label=\"close\"\n          onClick={props.handleClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        { validWords.length > 0 &&\n          <>\n            <Divider sx={{ m: 0, p: 2 }}>CORRECT WORDS</Divider>\n            <Grid container justify=\"center\" alignContent=\"center\" sm={12} spacing={3}>\n              {validWords}\n            </Grid>\n          </>\n        } \n        { invalidWords.length > 0 &&\n          <>\n            <Divider sx={{ m: 0, p: 2 }}>INCORRECT WORDS</Divider>\n            <Grid container justify=\"center\" alignContent=\"center\" sm={12} spacing={3}>\n              {invalidWords}\n            </Grid>\n          </>\n        }\n        { invalidWords.length === 0 &&\n          <>\n            <Divider sx={{ m: 2, p: 2 }}></Divider>\n            <Grid container justify=\"center\" alignContent=\"center\" sm={12}>\n              <Grid container justifyContent=\"center\"item sm={12}>\n                <Tooltip open={toolTipOpen} title=\"Copied\">\n                  <Button variant=\"contained\" sx={{backgroundColor: \"#FFA987\", width: 0.33}} onClick={() => handleShareClick()}>Share</Button>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </>\n        } \n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default ValidationModal","import { useState, useEffect } from 'react';\nimport { Grid, Button, Container, Popover, Typography } from '@mui/material'\nimport { areAllConnected, createTiles, getAllWords, resetTiles, shuffleTiles, generateRandomLetters } from \"../GameState\";\nimport Words from '../words.json'\nimport ValidationModal from '../components/ValidationModal';\nimport { Daily, NotAllConnected, NotAllOnBoard, NoTwoLetterWords, Unlimited } from '../constants';\n\nconst GameButtons = (props) => {\n\n  /**\n   * Generates new random letters and resets tiles\n   */\n  const createNewGame = () => {\n    let newLetters = generateRandomLetters()\n  \n    let tempTiles = createTiles(newLetters)\n  \n    props.setTiles({...tempTiles})\n    resetTiles({...tempTiles})\n    setFoundWords([])\n  }\n  \n  /**\n   * Moves all tiles back to bench\n   */\n  const setTilesBackToBench = () => {\n    let allStartingSpot = Object.values(props.tiles).every(tile => tile.y === 0)\n    if (allStartingSpot) {\n      return\n    }\n    let letters = Object.values(props.tiles).map(tile => tile.letter)\n    let tempTiles = createTiles(letters)\n  \n    props.setTiles({...tempTiles})\n    resetTiles({...tempTiles})\n  }\n  \n  /**\n   * Shuffles tiles still on bench\n   */\n  const shuffle = () => {\n    let x = Object.values(props.tiles).filter(tile => tile.y === 0).length\n    const spots = [...Array(x).keys()].sort(() => (Math.random() > 0.5) ? 1 : -1)\n    console.log(spots)\n  \n    let tempTiles = shuffleTiles(spots)\n    props.setTiles({...tempTiles})\n    resetTiles({...tempTiles})\n  }\n  \n  /**\n   * Validates all the letters on the board, connected and then opens\n   * modal showing which are spelling correct\n   */\n  const validate = (event) => {\n    let anyStartingSpot = Object.values(props.tiles).some(tile => tile.y === 0)\n    if (anyStartingSpot) {\n      setValidationError(NotAllOnBoard)\n      handlePopOverOpen(event)\n      return;\n    }\n  \n    let allConnected = areAllConnected(Object.values(props.tiles))\n    if (!allConnected) {\n      setValidationError(NotAllConnected)\n      handlePopOverOpen(event)\n      return;\n    }\n\n    const words = getAllWords(Object.values(props.tiles))\n\n    let twoLetterWords = words.some(word => word.length === 2)\n    let officialRules = localStorage.getItem(\"officialRules\") === \"true\"\n    if (twoLetterWords && officialRules) {\n      setValidationError(NoTwoLetterWords)\n      handlePopOverOpen(event)\n      return\n    }\n\n  \n    let checkedWords = []\n    words.forEach(word => {\n      console.log(`${word} | ${Words.hasOwnProperty(word)}`)\n      checkedWords.push({\n        word: word,\n        valid: Words.hasOwnProperty(word)\n      })\n    })\n  \n    setFoundWords(checkedWords)\n    handleValidationOpen()\n  }\n\n  const [popOverAnchor, setPopOverAnchor] = useState(null);\n\n  const handlePopOverOpen = (event) => {\n    setPopOverAnchor(event.currentTarget);\n  };\n\n  const handlePopOverClose = () => {\n    setPopOverAnchor(null);\n  };\n\n  const [validationError, setValidationError] = useState(null);\n\n  const [validationOpen, setValidationOpen] = useState(false);\n  const [foundWords, setFoundWords] = useState([]);\n\n  const handleValidationOpen = () => {\n    setValidationOpen(true);\n  };\n\n  const handleValidationClose = () => {\n    setValidationOpen(false);\n  };\n\n  useEffect(\n    () => {\n      if (props.mode === Unlimited) {\n        createNewGame()\n      }\n    },\n    [props.difficultyMode],\n  );\n\n  \n\n  return (\n    <Container disableGutters maxWidth=\"sm\" component=\"main\" justifyContent=\"center\">\n      <Grid container maxWidth=\"sm\" spacing={3}>\n        { props.mode === Unlimited &&\n          <Grid container item md={3} justifyContent=\"center\">\n            <Button variant=\"contained\" sx={{backgroundColor: \"#E54B4B\", width: 1}} onClick={() => createNewGame()}>New Game</Button>\n          </Grid>\n        }\n        <Grid container item md={props.mode === Unlimited ? 3 : 4} justifyContent=\"center\">\n          <Button variant=\"contained\" sx={{backgroundColor: \"#FFA987\", width: 1}} onClick={() => setTilesBackToBench()}>Reset Tiles</Button>\n        </Grid>\n        <Grid container item md={props.mode === Unlimited ? 3 : 4} justifyContent=\"center\">\n          <Button variant=\"contained\" sx={{backgroundColor: \"#FFA987\", width: 1}} onClick={() => shuffle()}>Shuffle</Button>\n        </Grid>\n        <Grid container item md={props.mode === Unlimited ? 3 : 4} justifyContent=\"center\">\n          <Button variant=\"contained\" sx={{backgroundColor: \"#FFA987\", width: 1}} onClick={(event) => validate(event)}>Validate</Button>\n          <Popover\n            open={Boolean(popOverAnchor)}\n            anchorEl={popOverAnchor}\n            onClose={handlePopOverClose}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n          >\n            {validationError === NotAllConnected &&\n              <Typography sx={{ p: 2 }}>All tiles are not currently connected</Typography>\n            }\n            {validationError === NotAllOnBoard &&\n              <Typography sx={{ p: 2 }}>All tiles are not currently on the board</Typography>\n            }\n            {validationError === NoTwoLetterWords &&\n              <Typography sx={{ p: 2 }}>Official Rules enabled, two letter words are banned</Typography>\n            }\n          </Popover>\n        </Grid>\n      </Grid>\n      <ValidationModal open={validationOpen} tiles={props.tiles} handleClose={handleValidationClose} foundWords={foundWords} mode={props.mode} />\n    </Container>\n  )\n}\n\nexport default GameButtons","import React, { useState, useEffect } from \"react\";\nimport { CssBaseline, GlobalStyles } from '@mui/material'\nimport { observe } from \"../GameState\";\nimport GameArea from \"../components/GameArea\";\nimport GithubFooter from \"../components/GithubFooter\";\nimport ToolBarView from \"./ToolBarView\";\nimport GameButtons from \"./GameButtons\";\nimport { Daily, Unlimited } from \"../constants\";\n\n\nconst GameView = (props) => {\n  const [tiles, setTiles] = useState({...props.tiles});\n  useEffect(() => observe((newPos) => {\n    setTiles({...newPos})\n  }, tiles));\n\n  useEffect(() => {\n    // setDifficultyMode(\"Normal Mode\")\n    if (props.mode === Daily && difficultyMode !== \"Normal Mode\") {\n      setDifficultyMode(\"Normal Mode\")\n    } else {\n      setDifficultyMode(localStorage.getItem(\"easyMode\") !== null ? localStorage.getItem(\"easyMode\") === \"true\" && props.mode === Unlimited ? \"Easy Mode\" : \"Normal Mode\" : \"Normal Mode\")\n    }\n    setTiles(props.tiles)\n  }, [props.tiles, props.mode])\n\n  // // useEffect(() => {\n  // //   console.log(\"test\")\n  //   if (props.mode === Daily) {\n  //     setDifficultyMode(\"Normal Mode\")\n  //   } else {\n  //     setDifficultyMode(localStorage.getItem(\"easyMode\") !== null ? localStorage.getItem(\"easyMode\") === \"true\" && props.mode === Unlimited ? \"Easy Mode\" : \"Normal Mode\" : \"Normal Mode\")\n  //   }\n  // // }, [props.mode])\n\n  const [difficultyMode, setDifficultyMode] = useState(localStorage.getItem(\"easyMode\") !== null ? localStorage.getItem(\"easyMode\") === \"true\" && props.mode === Unlimited ? \"Easy Mode\" : \"Normal Mode\" : \"Normal Mode\")\n  const [ruleSet, setRuleSet] = useState(localStorage.getItem(\"officialRules\") !== null ? localStorage.getItem(\"officialRules\") === \"true\" ? \"Official Rules\" : \"Unofficial Rules\" : \"Unofficial Rules\")\n\n  console.log(tiles[0])\n\n  return (\n    <React.Fragment>\n      <GlobalStyles styles={{ ul: { margin: 0, padding: 0, listStyle: 'none', }}} />\n      <CssBaseline />\n\n      <ToolBarView setDifficultyMode={setDifficultyMode} setRuleSet={setRuleSet} mode={props.mode}/>\n    \n      <GameArea tiles={Object.values(tiles)} difficultyMode={difficultyMode} ruleSet={ruleSet} mode={props.mode}/>\n\n      <GameButtons setTiles={setTiles} tiles={tiles} difficultyMode={difficultyMode} mode={props.mode}/>\n\n      <GithubFooter sx={{ mt: 5 }} />\n\n    </React.Fragment>\n  )\n}\n\nexport default GameView;","import { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { TouchBackend } from 'react-dnd-touch-backend'\nimport { createTiles, getLetters } from '../GameState';\nimport GameView from './GameView';\nimport { isMobile } from 'react-device-detect';\n\nconst AppView = (props) => {\n  return (\n    <DndProvider backend={isMobile ? TouchBackend : HTML5Backend}>\n      <GameView tiles={createTiles(getLetters(props.mode), props.mode)} mode={props.mode}/>\n    </DndProvider>\n  )\n}\n\nexport default AppView","import {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n} from \"react-router-dom\";\nimport { Daily, Unlimited } from \"./constants\";\nimport AppView from './views/AppView';\n\nfunction App() {\n\n  return (\n    <Router>\n      <Routes>\n        <Route exact path=\"/qless\" element={<AppView mode={Daily}/>} />\n        <Route exact path=\"/qless/unlimited\" element={<AppView mode={Unlimited}/>} />\n        <Route path=\"*\" element={<AppView mode={Daily} />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nif(module.hot){\n  module.hot.accept()\n}\n\nroot.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}