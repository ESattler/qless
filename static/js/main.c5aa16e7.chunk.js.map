{"version":3,"sources":["utils.js","GameState.js","constants.js","components/Tile.js","components/Square.js","components/Board.js","components/TileBench.js","components/GameArea.js","components/GithubFooter.js","components/ValidationModal.js","views/GameView.js","views/AppView.js","App.js","index.js"],"names":["Array","prototype","swap","a","b","this","length","temp","range","n","from","x","i","matrix","y","rows","columns","map","row","slice","letters","observers","emitChange","id","observe","o","tile","resetTile","newTile","getRandomInt","max","Math","floor","random","generateRandomLetters","charAt","getNeighbors","allTiles","upNeighbor","downNeighbor","rightNeighbor","leftNeighbor","forEach","tempTile","getWordDown","down","letter","getWordRight","right","getAllWords","words","console","log","up","left","word","push","ItemTypes","Tile","props","useDrag","type","item","collect","monitor","isDragging","drag","useDrop","accept","drop","fromID","toID","fromX","fromY","toX","toY","swapTile","isOver","Box","sx","width","height","background","cursor","borderRadius","ref","node","Typography","variant","position","color","fontSize","lineHeight","textAlign","fontWeight","TileBenchSquare","moveTile","style","backgroundColor","boxShadow","Board","tiles","squares","rowIndex","tempRow","index","element","W","Stack","spacing","direction","justifyContent","alignItems","renderBoardSquares","React","Component","TileBench","GameArea","Container","disableGutters","maxWidth","component","pt","pb","GithubFooter","align","onClick","event","window","open","opacity","ValidationModal","Modal","onClose","handleClose","BackdropProps","justify","alignContent","top","transform","bgcolor","border","p","Grid","container","xs","foundWordsDivs","validate","setFoundWords","handleClickOpen","setValidationError","Object","values","some","alert","allConnected","examinedTiles","countConnect","includes","areAllConnected","checkedWords","Words","hasOwnProperty","valid","GameView","useState","tile1","setTile1","useEffect","newPos","tile2","setTile2","tile3","setTile3","tile4","setTile4","tile5","setTile5","tile6","setTile6","tile7","setTile7","tile8","setTile8","tile9","setTile9","tile10","setTile10","tile11","setTile11","tile12","setTile12","setTiles","setOpen","foundWords","Fragment","GlobalStyles","styles","ul","margin","padding","listStyle","CssBaseline","borderBottom","theme","md","IconButton","size","noWrap","Button","newLetters","randomize","borderTop","mt","py","AppView","DndProvider","backend","HTML5Backend","App","path","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"qHAUCA,MAAMC,UAAUC,KAAO,SAAUC,EAAGC,GACnC,GAAKA,GAAKC,KAAKC,QAAUF,EAAI,EAAI,OAAOC,KAGxC,IAAIE,EAAOF,KAAKF,GAGhB,OAFAE,KAAKF,GAAKE,KAAKD,GACfC,KAAKD,GAAKG,EACHF,MAaTL,MAAMQ,MAAQ,SAAAC,GAAC,OAAIT,MAAMU,KAAK,IAAIV,MAAMS,IAAI,SAACE,EAAEC,GAAH,OAASA,MAerDZ,MAAMa,OAAS,SAACF,EAAGG,GACjB,IAAMC,EAAOf,MAAMQ,MAAMM,GACnBE,EAAUhB,MAAMQ,MAAMG,GAC5B,OAAOI,EAAKE,KAAK,SAACC,EAAKN,GAAN,OAAYI,EAAQG,a,8IChDjCC,EAAU,GAEZC,EAAY,GAEhB,SAASC,IACP,IAAK,IAAIC,KAAMF,EACbA,EAAUE,GAAV,eAAkBH,EAAQG,KAIvB,SAASC,EAAQC,EAAGC,GACzBL,EAAUK,EAAKH,IAAME,EACrBL,EAAQM,EAAKH,IAAMG,EAkDd,SAASC,EAAUJ,EAAIK,GAC1BR,EAAQG,GAAR,eACKK,GAOT,SAASC,EAAaC,GACpB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,GAG7B,SAASI,IAiBd,MAFc,CAbJ,SAASC,OAAON,EAAa,IAC7B,SAASM,OAAON,EAAa,IAC3B,SAASM,OAAON,EAAa,IAC9B,SAASM,OAAON,EAAa,IAC7B,SAASM,OAAON,EAAa,IAC9B,SAASM,OAAON,EAAc,IAC5B,SAASM,OAAON,EAAa,IAC7B,SAASM,OAAON,EAAa,IAC9B,SAASM,OAAON,EAAa,IAC9B,SAASM,OAAON,EAAa,IAC1B,SAASM,OAAON,EAAa,IAC7B,SAASM,OAAON,EAAc,KA4C7C,SAASO,EAAaC,EAAUX,GAC9B,IAAIY,EAAa,KACbC,EAAe,KACfC,EAAgB,KAChBC,EAAe,KAmBnB,OAlBAJ,EAASK,SAAQ,SAAAC,GAEXA,EAAShC,IAAMe,EAAKf,GAAKgC,EAAS7B,EAAIY,EAAKZ,KAAO,IACpDwB,EAAaK,GAGXA,EAAShC,IAAMe,EAAKf,GAAKgC,EAAS7B,EAAIY,EAAKZ,IAAM,IACnDyB,EAAeI,GAGbA,EAAShC,EAAIe,EAAKf,IAAM,GAAKgC,EAAS7B,IAAMY,EAAKZ,IACnD0B,EAAgBG,GAGdA,EAAShC,EAAIe,EAAKf,KAAO,GAAKgC,EAAS7B,IAAMY,EAAKZ,IACpD2B,EAAeE,MAGZ,CAACL,EAAYC,EAAcE,EAAcD,GAGlD,SAASI,EAAYP,EAAUX,GAC7B,MAAqBU,EAAaC,EAAUX,GAAnCmB,EAAT,oBACA,OAAKA,EAGC,GAAN,OAAUnB,EAAKoB,QAAf,OAAwBF,EAAYP,EAAUQ,IAFrCnB,EAAKoB,OAKhB,SAASC,EAAaV,EAAUX,GAC9B,MAAsBU,EAAaC,EAAUX,GAAhCsB,EAAb,oBACA,OAAKA,EAGC,GAAN,OAAUtB,EAAKoB,QAAf,OAAwBC,EAAaV,EAAUW,IAFtCtB,EAAKoB,OAMT,SAASG,EAAYZ,GAC1B,IAAIa,EAAQ,GAqBZ,OApBAC,QAAQC,IAAI,mBAAoBf,GAEhCA,EAASK,SAAQ,SAAAhB,GACf,MAAgCU,EAAaC,EAAUX,GAAvD,mBAAO2B,EAAP,KAAWR,EAAX,KAAiBS,EAAjB,KAAuBN,EAAvB,KAGA,GAAIH,IAASQ,EAAI,CACfF,QAAQC,IAAR,gCAAqC1B,EAAKoB,OAA1C,qCACA,IAAIS,EAAOX,EAAYP,EAAUX,GACjCwB,EAAMM,KAAKD,GACXJ,QAAQC,IAAR,qBAA0BG,IAG5B,GAAIP,IAAUM,EAAM,CAClBH,QAAQC,IAAR,gCAAqC1B,EAAKoB,OAA1C,sCACA,IAAIS,EAAOR,EAAaV,EAAUX,GAClCwB,EAAMM,KAAKD,GACXJ,QAAQC,IAAR,qBAA0BG,QAGvBL,E,mJCrMIO,G,OACL,Q,kCCuDSC,EAhDJ,SAACC,GAEV,MAA+BC,aAAQ,iBAAO,CAC1CC,KAAMJ,EACNK,KAAM,WACJ,MAAO,CAACvC,GAAIoC,EAAMpC,KAEpBwC,QAAS,SAACC,GAAD,MAAc,CACnBC,aAAcD,EAAQC,mBAN9B,mBAAuBC,GAAvB,KAASD,WAAT,MAUA,EAA2BE,aAAQ,iBAAO,CACtCC,OAAQX,EACRY,KAAM,SAACP,EAAME,IFEd,SAAkBM,EAAQC,GAC/B,IAAIC,EAAQpD,EAAQkD,GAAQ3D,EACxB8D,EAAQrD,EAAQkD,GAAQxD,EAExB4D,EAAMtD,EAAQmD,GAAM5D,EACpBgE,EAAMvD,EAAQmD,GAAMzD,EAExBM,EAAQkD,GAAR,2BACKlD,EAAQkD,IADb,IAEE3D,EAAG+D,EACH5D,EAAG6D,IAGLvD,EAAQmD,GAAR,2BACKnD,EAAQmD,IADb,IAEE5D,EAAG6D,EACH1D,EAAG2D,IAELnD,IEnBQsD,CAASd,EAAKvC,GAAIoC,EAAMpC,KAE1BwC,QAAS,SAAAC,GAAO,MAAK,CACnBa,SAAUb,EAAQa,cAElB,CAAClB,EAAMhD,EAAGgD,EAAM7C,IARtB,mBAAmBuD,GAAnB,KAASQ,OAAT,MAUA,OACE,cAACC,EAAA,EAAD,CACEC,GAAI,CACFC,MAAM,GAAD,OA3BK,GA2BL,MACLC,OAAO,GAAD,OA5BI,GA4BJ,MACNC,WAAY,UACZC,OAAQ,OACRC,aAAc,OAEhBC,IAAK,SAACC,GAAD,OAAUpB,EAAKG,EAAKiB,KAR3B,SAUE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKT,GAAI,CAC3BU,SAAU,WACVC,MAAO,OACPT,OAAQ,EACRU,SAAU,SACVC,WAAW,GAAD,OAxCA,GAwCA,MACVC,UAAW,SACXC,WAAY,KAPd,SASGnC,EAAMb,YCbAiD,EA7BO,SAACpC,GACvB,MAA2BQ,aAAQ,iBAAO,CACxCC,OAAQX,EACRY,KAAM,SAACP,EAAME,GACXb,QAAQC,IAAI,sBAAuBU,GHGlC,SAAkBY,EAAKC,EAAKb,GACjC1C,EAAQ0C,EAAKvC,IAAb,2BACKH,EAAQ0C,EAAKvC,KADlB,IAEEZ,EAAG+D,EACH5D,EAAG6D,IAELrD,IGRI0E,CAASrC,EAAMhD,EAAGgD,EAAM7C,EAAGgD,IAE7BC,QAAS,SAAAC,GAAO,MAAK,CACnBa,SAAUb,EAAQa,cAElB,CAAClB,EAAMhD,EAAGgD,EAAM7C,IATpB,mBAAS+D,EAAT,KAASA,OAAUR,EAAnB,KAWI4B,EAAQ,CACVjB,MAAM,GAAD,OAfW,GAeX,MACLC,OAAO,GAAD,OAhBU,GAgBV,MACNiB,gBAAiB,UACjBC,UAAW,iCAMb,OAJItB,IACFoB,EAAMf,WAAa,oBAGd,cAACJ,EAAA,EAAD,CACLC,GAAIkB,EACJZ,IAAKhB,K,SCvBH+B,E,wKAEJ,SAAmBC,GACjB,IAAMxF,EAASb,MAAMa,OANL,GACC,IAObyF,EAAU,GA0Bd,OAxBAzF,EAAOI,KAAI,SAACC,EAAKqF,GACf,IAAIC,EAAU,GAEdtF,EAAID,KAAI,SAAAwF,GAEN,IAAIC,EAAU,cAAC,EAAD,CACZ/F,EAAG8F,EAAME,GAAC,EACV7F,EAAGyF,EAAS,GAFA,qBAGOE,GAHP,OAGeF,IAG7BF,EAAM3D,SAAQ,SAAAhB,GACRA,EAAKf,IAAM8F,GAAS/E,EAAKZ,IAAMyF,EAAS,IAC1CG,EAAU,cAAC,EAAD,eAA2BhF,GAAbA,EAAKH,QAGjCiF,EAAQhD,KAAKkD,MAEfJ,EAAQ9C,KACR,cAACoD,EAAA,EAAD,CAAOC,QAAS,EAAGC,UAAU,MAAMC,eAAe,SAASC,WAAW,SAAtE,SACKR,QAIAF,I,oBAGT,WACE,OAAOjG,KAAK4G,mBAAmB5G,KAAKsD,MAAM0C,W,GAnC1Ba,IAAMC,WAuCXf,ICxCTgB,E,wKAEJ,SAAmBf,GACjB,IAAMxF,EAASb,MAAMa,OANL,GACC,GAObyF,EAAU,GA0Bd,OAxBAzF,EAAOI,KAAI,SAACC,EAAKqF,GACf,IAAIC,EAAU,GAEdtF,EAAID,KAAI,SAAAwF,GAEN,IAAIC,EAAU,cAAC,EAAD,CACZ/F,EAAG8F,EACH3F,EAAGyF,GAFS,qBAGOE,GAHP,OAGeF,IAG7BF,EAAM3D,SAAQ,SAAAhB,GACRA,EAAKf,IAAM8F,GAAS/E,EAAKZ,IAAMyF,IACjCG,EAAU,cAAC,EAAD,eAA2BhF,GAAbA,EAAKH,QAGjCiF,EAAQhD,KAAKkD,MAEfJ,EAAQ9C,KACR,cAACoD,EAAA,EAAD,CAAOC,QAAS,EAAGC,UAAU,MAAMC,eAAe,SAASC,WAAW,SAAtE,SACKR,QAIAF,I,oBAGT,WACE,OAAOjG,KAAK4G,mBAAmB5G,KAAKsD,MAAM0C,W,GAnCtBa,IAAMC,WAuCfC,IC1CTC,E,4JAEJ,WACE,OACE,qCACE,cAACC,EAAA,EAAD,CAAWC,gBAAc,EAACC,SAAS,KAAKC,UAAU,OAAO1C,GAAI,CAAE2C,GAAI,EAAGC,GAAI,GAA1E,SACE,cAAC,EAAD,CAAOtB,MAAOhG,KAAKsD,MAAM0C,UAE3B,cAACiB,EAAA,EAAD,CAAWC,gBAAc,EAACC,SAAS,KAAKC,UAAU,OAAO1C,GAAI,CAAE2C,GAAI,EAAGC,GAAI,GAA1E,SACE,cAAC,EAAD,CAAWtB,MAAOhG,KAAKsD,MAAM0C,iB,GAThBa,IAAMC,WAgBZE,K,oBCHFO,GAfM,WACnB,OACE,cAACrC,EAAA,EAAD,CAAYC,QAAQ,QAAQE,MAAM,iBAAiBmC,MAAM,SAAzD,SACI,cAAC,KAAD,CACAC,QAAS,SAAAC,GAAK,OAAKC,OAAOC,KAAK,qCAAsC,WACrElD,GAAI,CACFY,SAAU,GACV,UAAW,CACTuC,QAAS,U,UCiBNC,GA1BS,SAACxE,GAEvB,OACE,cAACyE,GAAA,EAAD,CACEH,KAAMtE,EAAMsE,KACZI,QAAS1E,EAAM2E,YACfC,cAAe,CAAEtC,MAAO,CAAEC,gBAAiB,0BAH7C,SAKE,cAACpB,EAAA,EAAD,CAAK0D,QAAQ,SAASC,aAAa,SAASzB,WAAW,SAASjC,GAAI,CAClEU,SAAU,WACViD,IAAK,MACLpF,KAAM,MACNqF,UAAW,wBACX3D,MAAO,IACP4D,QAAS,mBACTC,OAAQ,iBACRC,EAAG,GARL,SAUE,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACR,QAAQ,SAASC,aAAa,SAASQ,GAAI,GAAIpC,QAAS,EAAxE,SACGlD,EAAMuF,sB,wCCUjB,SAASC,GAAS9C,EAAO+C,EAAeC,EAAiBC,GAEvD,GADsBC,OAAOC,OAAOnD,GAAOoD,MAAK,SAAA/H,GAAI,OAAe,IAAXA,EAAKZ,KAE3D4I,MAAM,wBADR,CAKA,IAAIC,ET4DC,SAAyBtD,GAC9B,IAAIuD,EAAgB,GAyBpB,OAvBoB,SAAhBC,EAA0BnI,GAC5B,MAAgCU,EAAaiE,EAAO3E,GAApD,mBAAO2B,EAAP,KAAWR,EAAX,KAAiBS,EAAjB,KAAuBN,EAAvB,KACAG,QAAQC,IAAR,0BAA+B1B,EAAKoB,SAChCO,IAAOuG,EAAcE,SAASzG,EAAG9B,MACnCqI,EAAcpG,KAAKH,EAAG9B,IACtBsI,EAAaxG,IAEXR,IAAS+G,EAAcE,SAASjH,EAAKtB,MACvCqI,EAAcpG,KAAKX,EAAKtB,IACxBsI,EAAahH,IAEXS,IAASsG,EAAcE,SAASxG,EAAK/B,MACvCqI,EAAcpG,KAAKF,EAAK/B,IACxBsI,EAAavG,IAEXN,IAAU4G,EAAcE,SAAS9G,EAAMzB,MACzCqI,EAAcpG,KAAKR,EAAMzB,IACzBsI,EAAa7G,IAIjB6G,CAAaxD,EAAM,IAEa,KAAzBuD,EAActJ,OStFFyJ,CAAgB1D,GACnC,GAAKsD,EAAL,CAKA,IAAMzG,EAAQD,EAAYoD,GACtB2D,EAAe,GACnB9G,EAAMR,SAAQ,SAAAa,GACZJ,QAAQC,IAAR,UAAeG,EAAf,cAAyB0G,EAAMC,eAAe3G,KAC9CyG,EAAaxG,KAAK,CAChBD,KAAMA,EACN4G,MAAOF,EAAMC,eAAe3G,QAIhC6F,EAAcY,GACdX,SAfEK,MAAM,sBAkBV,IAkIeU,GAlIE,SAACzG,GAEhB,MAA0B0G,mBAAS,CAAC1J,EAAG,EAAGG,EAAG,EAAGgC,OAAQa,EAAMvC,QAAQ,GAAIG,GAAI,MAA9E,mBAAO+I,EAAP,KAAcC,EAAd,KACAC,qBAAU,kBAAMhJ,GAAQ,SAACiJ,GAAD,OAAYF,EAASE,KAASH,MAEtD,MAA0BD,mBAAS,CAAC1J,EAAG,EAAGG,EAAG,EAAGgC,OAAQa,EAAMvC,QAAQ,GAAIG,GAAI,MAA9E,mBAAOmJ,EAAP,KAAcC,EAAd,KACAH,qBAAU,kBAAMhJ,GAAQ,SAACiJ,GAAD,OAAYE,EAASF,KAASC,MAEtD,MAA0BL,mBAAS,CAAC1J,EAAG,EAAGG,EAAG,EAAGgC,OAAQa,EAAMvC,QAAQ,GAAIG,GAAI,MAA9E,mBAAOqJ,EAAP,KAAcC,EAAd,KACAL,qBAAU,kBAAMhJ,GAAQ,SAACiJ,GAAD,OAAYI,EAASJ,KAASG,MAEtD,MAA0BP,mBAAS,CAAC1J,EAAG,EAAGG,EAAG,EAAGgC,OAAQa,EAAMvC,QAAQ,GAAIG,GAAI,MAA9E,mBAAOuJ,EAAP,KAAcC,EAAd,KACAP,qBAAU,kBAAMhJ,GAAQ,SAACiJ,GAAD,OAAYM,EAASN,KAASK,MAEtD,MAA0BT,mBAAS,CAAC1J,EAAG,EAAGG,EAAG,EAAGgC,OAAQa,EAAMvC,QAAQ,GAAIG,GAAI,MAA9E,mBAAOyJ,EAAP,KAAcC,EAAd,KACAT,qBAAU,kBAAMhJ,GAAQ,SAACiJ,GAAD,OAAYQ,EAASR,KAASO,MAEtD,MAA0BX,mBAAS,CAAC1J,EAAG,EAAGG,EAAG,EAAGgC,OAAQa,EAAMvC,QAAQ,GAAIG,GAAI,MAA9E,mBAAO2J,EAAP,KAAcC,EAAd,KACAX,qBAAU,kBAAMhJ,GAAQ,SAACiJ,GAAD,OAAYU,EAASV,KAASS,MAEtD,MAA0Bb,mBAAS,CAAC1J,EAAG,EAAGG,EAAG,EAAGgC,OAAQa,EAAMvC,QAAQ,GAAIG,GAAI,MAA9E,mBAAO6J,EAAP,KAAcC,EAAd,KACAb,qBAAU,kBAAMhJ,GAAQ,SAACiJ,GAAD,OAAYY,EAASZ,KAASW,MAEtD,MAA0Bf,mBAAS,CAAC1J,EAAG,EAAGG,EAAG,EAAGgC,OAAQa,EAAMvC,QAAQ,GAAIG,GAAI,MAA9E,mBAAO+J,EAAP,KAAcC,EAAd,KACAf,qBAAU,kBAAMhJ,GAAQ,SAACiJ,GAAD,OAAYc,EAASd,KAASa,MAEtD,MAA0BjB,mBAAS,CAAC1J,EAAG,EAAGG,EAAG,EAAGgC,OAAQa,EAAMvC,QAAQ,GAAIG,GAAI,MAA9E,mBAAOiK,EAAP,KAAcC,EAAd,KACAjB,qBAAU,kBAAMhJ,GAAQ,SAACiJ,GAAD,OAAYgB,EAAShB,KAASe,MAEtD,OAA4BnB,mBAAS,CAAC1J,EAAG,EAAGG,EAAG,EAAGgC,OAAQa,EAAMvC,QAAQ,GAAIG,GAAI,MAAhF,qBAAOmK,GAAP,MAAeC,GAAf,MACAnB,qBAAU,kBAAMhJ,GAAQ,SAACiJ,GAAD,OAAYkB,GAAUlB,KAASiB,OAEvD,OAA4BrB,mBAAS,CAAC1J,EAAG,GAAIG,EAAG,EAAGgC,OAAQa,EAAMvC,QAAQ,IAAKG,GAAI,OAAlF,qBAAOqK,GAAP,MAAeC,GAAf,MACArB,qBAAU,kBAAMhJ,GAAQ,SAACiJ,GAAD,OAAYoB,GAAUpB,KAASmB,OAEvD,OAA4BvB,mBAAS,CAAC1J,EAAG,GAAIG,EAAG,EAAGgC,OAAQa,EAAMvC,QAAQ,IAAKG,GAAI,OAAlF,qBAAOuK,GAAP,MAAeC,GAAf,MACAvB,qBAAU,kBAAMhJ,GAAQ,SAACiJ,GAAD,OAAYsB,GAAUtB,KAASqB,OAEvD,IAtC0B,GAsCtBzF,GAAQ,CAACiE,EAAOI,EAAOE,EAAOE,EAAOE,EAAOE,EAAOE,EAAOE,EAAOE,EAAOE,GAAQE,GAAQE,IACxFE,GAAW,CAACzB,EAAUI,EAAUE,EAAUE,EAAUE,EAAUE,EAAUE,EAAUE,EAAUE,EAAUE,GAAWE,GAAWE,IAEhI,GAAwB7E,IAAMmD,UAAS,GAAvC,qBAAOpC,GAAP,MAAagE,GAAb,MACA,GAAoC5B,mBAAS,IAA7C,qBAAO6B,GAAP,MAAmB9C,GAAnB,MACA,GAAoCiB,oBAAS,GAA7C,qBAAcf,IAAd,aAEMD,GAAkB,WACtB4C,IAAQ,IAQN/C,GAAiB,GAtDK,eAuDTgD,IAvDS,IAuD1B,8BAA6B,CAAC,IAArB3I,GAAoB,SAC3B2F,GAAe1F,KACb,eAACuF,EAAA,EAAD,CAAMC,WAAS,EAACjC,eAAe,SAAQjD,MAAI,EAACmF,GAAI,EAAhD,UACI1F,GAAK4G,OACL,cAAC,IAAD,CAAWzE,MAAM,aAEhBnC,GAAK4G,OACN,cAAC,IAAD,CAAWzE,MAAM,UALrB,IAMKnC,GAAKA,UA/DY,kCAoE1B,OACE,eAAC,IAAM4I,SAAP,WACE,cAACC,EAAA,EAAD,CAAcC,OAAQ,CAAEC,GAAI,CAAEC,OAAQ,EAAGC,QAAS,EAAGC,UAAW,WAChE,cAACC,EAAA,EAAD,IACA,cAACpF,EAAA,EAAD,CACEE,SAAS,KACTC,UAAU,SACV1C,GAAI,CACF4H,aAAc,SAACC,GAAD,2BACdjF,GAAI,GALR,SAQE,eAACoB,EAAA,EAAD,CAAMC,WAAS,EAACxB,SAAS,KAAKT,eAAe,SAA7C,UACE,cAACgC,EAAA,EAAD,CAAMC,WAAS,EAAClF,MAAI,EAAC+I,GAAI,EAAG9F,eAAe,WAAWC,WAAW,WAAjE,SACI,cAAC8F,EAAA,EAAD,CAAY,aAAW,SAASC,KAAK,QAArC,SACE,cAAC,KAAD,CAAiBpH,SAAS,UAAUZ,GAAI,CAAEY,SAAU,cAG1D,cAACoD,EAAA,EAAD,CAAMC,WAAS,EAAClF,MAAI,EAAC+I,GAAI,EAAG9F,eAAe,SAA3C,SACE,cAACxB,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,UAAUmC,MAAM,SAASmF,QAAM,EAA9D,qBAIF,cAACjE,EAAA,EAAD,CAAMC,WAAS,EAAClF,MAAI,EAAC+I,GAAI,EAAG9F,eAAe,aAAaC,WAAW,aAAnE,SACE,cAAC8F,EAAA,EAAD,CAAY,aAAW,SAASC,KAAK,QAArC,SACE,cAAC,KAAD,CAAcpH,SAAS,UAAUZ,GAAI,CAAEY,SAAU,mBAMzD,cAAC2B,EAAA,EAAD,CAAWC,gBAAc,EAACC,SAAS,KAAKC,UAAU,OAAO1C,GAAI,CAAE2C,GAAI,EAAGC,GAAI,GAA1E,SACE,cAAC,GAAD,CAAatB,MAAOA,OAEtB,cAACiB,EAAA,EAAD,CAAWC,gBAAc,EAACC,SAAS,KAAKC,UAAU,OAAOV,eAAe,SAAxE,SACE,eAACgC,EAAA,EAAD,CAAMC,WAAS,EAACxB,SAAS,KAAzB,UACE,cAACuB,EAAA,EAAD,CAAMC,WAAS,EAAClF,MAAI,EAAC+I,GAAI,EAAG9F,eAAe,SAA3C,SACE,cAACkG,EAAA,EAAD,CAAQzH,QAAQ,YAAYT,GAAI,CAACmB,gBAAiB,WAAY4B,QAAS,kBArJnF,SAAmBkE,EAAU5C,GAG3B,IAFA,IAAI8D,EAAahL,IAERtB,EAAI,EAAGA,EAAIoL,EAAS1L,OAAQM,IAAK,CACxC,IAAIgB,EAAU,CACZjB,EAAGC,EACHE,EAAG,EACHgC,OAAQoK,EAAWtM,GACnBW,GAAG,GAAD,OAAKX,IAGToL,EAASpL,GAAGgB,GACZD,EAAUf,EAAGgB,GACbwH,EAAc,KAwIuE+D,CAAUnB,GAAU5C,KAAjG,yBAEF,cAACL,EAAA,EAAD,CAAMC,WAAS,EAAClF,MAAI,EAAC+I,GAAI,EAAG9F,eAAe,SAA3C,SACE,cAACkG,EAAA,EAAD,CAAQzH,QAAQ,YAAYT,GAAI,CAACmB,gBAAiB,WAAY4B,QAAS,kBAAMqB,GAAS9C,GAAO+C,GAAeC,KAA5G,6BAKN,cAAC/B,EAAA,EAAD,CACEE,SAAS,KACTC,UAAU,SACV1C,GAAI,CACFqI,UAAW,SAACR,GAAD,2BACXS,GAAI,EACJC,GAAI,CAAC,EAAG,IANZ,SASE,cAAC,GAAD,CAAcvI,GAAI,CAAEsI,GAAI,OAE1B,cAAC,GAAD,CAAiBpF,KAAMA,GAAMK,YA3Eb,WAClBgB,IAAmB,GACnB2C,IAAQ,IAyEiD/C,eAAgBA,SCzK9DqE,GARC,WACd,OACE,cAACC,EAAA,EAAD,CAAaC,QAASC,IAAtB,SACE,cAAC,GAAD,CAAatM,QAASc,SCabyL,OAdf,WAIE,OAFAxK,QAAQC,IAAI,gBAGV,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwK,KAAK,IAAIlH,QAAS,cAAC,GAAD,MACzB,cAAC,IAAD,CAAOkH,KAAK,IAAIlH,QAAS,cAAC,GAAD,YCVpBmH,IAASC,WAAWC,SAASC,eAAe,SAMpDC,OACH,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,Q","file":"static/js/main.c5aa16e7.chunk.js","sourcesContent":["/**\n * Array.prototype.swap\n * Rearrange an array to swap the positions of two elements.\n * @param {Number} a - the index of the first element to swap.\n * @param {Number} b - the index of the second element to swap.\n * @returns {Array}\n * @example\n * // returns [ 'a', 'c', 'b' ]\n * [ 'a', 'b', 'c' ].swap(1, 2)\n */\n Array.prototype.swap = function (a, b) {\n  if ( b >= this.length || b < 0 ) return this;\n\n  // Temporary variable to hold data while we juggle\n  let temp = this[a];\n  this[a] = this[b];\n  this[b] = temp;\n  return this;\n};\n\n/**\n * Array.range\n * Create a new array of length n, where the elements are numbers\n * from 0 to n - 1.\n * @param {Number} n - the desired length of the range.\n * @returns {Array}\n * @example\n * // returns [ 0, 1, 2, 3 ]\n * Array.range(4);\n */\nArray.range = n => Array.from(new Array(n), (x,i) => i);\n\n/**\n * Array.matrix\n * Create a new two-dimensional array, where each element is its own index.\n * @param {Number} x - the desired number of columns (possible x values)\n * @param {Number} y - the desired number of rows (possible y values)\n * @returns {Array}\n * @example\n * // returns [\n * //   [ 0, 1, 2 ],\n * //   [ 0, 1, 2 ]\n * // ]\n * Array.matrix(3, 2);\n */\nArray.matrix = (x, y) => {\n  const rows = Array.range(y);\n  const columns = Array.range(x);\n  return rows.map( (row, i) => columns.slice() );\n}","const letters = {}\n\nlet observers = {};\n\nfunction emitChange() {\n  for (let id in observers) {\n    observers[id]({...letters[id]})\n  }\n}\n\nexport function observe(o, tile) {\n  observers[tile.id] = o\n  letters[tile.id] = tile\n}\n\nexport function moveTile(toX, toY, item) {\n  letters[item.id] = {\n    ...letters[item.id],\n    x: toX,\n    y: toY,\n  }\n  emitChange();\n}\n\nexport function swapTile(fromID, toID) {\n  let fromX = letters[fromID].x;\n  let fromY = letters[fromID].y;\n\n  let toX = letters[toID].x;\n  let toY = letters[toID].y;\n\n  letters[fromID] = {\n    ...letters[fromID],\n    x: toX,\n    y: toY\n  }\n\n  letters[toID] = {\n    ...letters[toID],\n    x: fromX,\n    y: fromY\n  }\n  emitChange()\n}\n\nexport function canDropTile(squareX, squareY, item) {\n  let allStartingSpot = Object.values(letters).every(tile => tile.y === 0)\n\n  let nextToExistingLetter = false\n  Object.values(letters).forEach(tile => {\n    if (tile.y !== 0 && tile.id !== item.id && ((Math.abs(tile.x - squareX) === 1 &&  Math.abs(tile.y - squareY) === 0) || (Math.abs(tile.y - squareY) === 1 && Math.abs(tile.x - squareX) === 0))) {\n      nextToExistingLetter = true\n    }\n  })\n\n\n  let [tile, up, down, left, right] = getNeighborsById(Object.values(letters), item.id);\n  let connectingPiece = (((up && down) || (left && right)) && tile.y !== 0);\n\n  return (allStartingSpot || nextToExistingLetter) && !connectingPiece\n}\n\nexport function resetTile(id, newTile) {\n    letters[id] = {\n      ...newTile\n    };\n}\n\n/*\n  GENERATE RANDOM LETTERS\n*/\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\nexport function generateRandomLetters() {\n  \n  let one = \"CCDTBJ\".charAt(getRandomInt(6))\n  let two = \"XZBNSK\".charAt(getRandomInt(6))\n  let three = \"YMLBML\".charAt(getRandomInt(6))\n  let four = \"ONIOIY\".charAt(getRandomInt(6))\n  let five = \"MCCTTS\".charAt(getRandomInt(6))\n  let six = \"HPTHTW\".charAt(getRandomInt (6))\n  let seven = \"RLLFDW\".charAt(getRandomInt(6))\n  let eight = \"EAOUUI\".charAt(getRandomInt(6))\n  let nine = \"RHNHNR\".charAt(getRandomInt(6))\n  let ten = \"OEAEAO\".charAt(getRandomInt(6))\n  let eleven = \"KPFVPG\".charAt(getRandomInt(6))\n  let twelve = \"GDGRRL\".charAt(getRandomInt (6))\n\n  let letters = [one, two, three, four, five, six, seven, eight, nine, ten, eleven, twelve]\n\n  return letters\n}\n\n/*\n  FIND LETTERS IN GRID\n*/\nexport function areAllConnected(tiles) {\n  let examinedTiles = []\n\n  let countConnect = (function (tile) {\n    const [up, down, left, right] = getNeighbors(tiles, tile)\n    console.log(`Looking at tile ${tile.letter}`)\n    if (up && !examinedTiles.includes(up.id) ) {\n      examinedTiles.push(up.id)\n      countConnect(up)\n    }\n    if (down && !examinedTiles.includes(down.id)) {\n      examinedTiles.push(down.id)\n      countConnect(down)\n    }\n    if (left && !examinedTiles.includes(left.id)) {\n      examinedTiles.push(left.id)\n      countConnect(left)\n    }\n    if (right && !examinedTiles.includes(right.id)) {\n      examinedTiles.push(right.id)\n      countConnect(right)\n    }\n  })\n\n  countConnect(tiles[0])\n\n  return examinedTiles.length === 12\n}\n\nfunction getNeighborsById(allTiles, id) {\n  let tile = allTiles.filter(t => t.id === id)[0]\n  return [tile, ...getNeighbors(allTiles, tile)]\n}\n\nfunction getNeighbors(allTiles, tile) {\n  let upNeighbor = null;\n  let downNeighbor = null;\n  let rightNeighbor = null;\n  let leftNeighbor = null;\n  allTiles.forEach(tempTile => {\n    \n    if (tempTile.x === tile.x && tempTile.y - tile.y === -1) {\n      upNeighbor = tempTile\n    }\n    \n    if (tempTile.x === tile.x && tempTile.y - tile.y === 1) {\n      downNeighbor = tempTile\n    }\n    \n    if (tempTile.x - tile.x === 1 && tempTile.y  ===tile.y) {\n      rightNeighbor = tempTile\n    }\n    \n    if (tempTile.x - tile.x === -1 && tempTile.y  ===tile.y) {\n      leftNeighbor = tempTile\n    }\n  })\n  return [upNeighbor, downNeighbor, leftNeighbor, rightNeighbor];\n}\n\nfunction getWordDown(allTiles, tile) {\n  const [, down, , ] = getNeighbors(allTiles, tile)\n  if (!down) {\n    return tile.letter\n  }\n  return `${tile.letter}${getWordDown(allTiles, down)}`\n}\n\nfunction getWordRight(allTiles, tile) {\n  const [, , , right] = getNeighbors(allTiles, tile)\n  if (!right) {\n    return tile.letter\n  }\n  return `${tile.letter}${getWordRight(allTiles, right)}`\n}\n\n\nexport function getAllWords(allTiles) {\n  let words = []\n  console.log(\"IN GET ALL WORDS\", allTiles)\n\n  allTiles.forEach(tile => {\n    const [up, down, left, right] = getNeighbors(allTiles, tile)\n    //console.log(`Tile ${tile.letter} has: up neighbor ${up?.letter}, down neighbor ${down?.letter}, right neighbor ${right?.letter}, left neighbor ${left?.letter}`)\n\n    if (down && !up) {\n      console.log(`Found starting letter ${tile.letter}, getting word in DOWN direction`)\n      let word = getWordDown(allTiles, tile)\n      words.push(word)\n      console.log(`FOUND WORD ${word}`)\n    }\n\n    if (right && !left) {\n      console.log(`Found starting letter ${tile.letter}, getting word in RIGHT direction`)\n      let word = getWordRight(allTiles, tile)\n      words.push(word)\n      console.log(`FOUND WORD ${word}`)\n    }\n  })\n  return words\n}","export const ItemTypes = {\n  TILE: 'tile'\n}","import React from \"react\";\nimport { ItemTypes } from '../constants'\nimport { useDrag, useDrop } from 'react-dnd'\nimport { swapTile } from \"../GameState\";\nimport { Box, Typography } from \"@mui/material\";\n\nconst SQUARE_SIZE = 70;\n\nconst Tile = (props) => {\n\n    const [{ isDragging }, drag] = useDrag(() => ({\n        type: ItemTypes.TILE,\n        item: () => {\n          return {id: props.id}\n        },\n        collect: (monitor) => ({\n            isDragging: !!monitor.isDragging()\n          })\n      }))\n\n    const [{ isOver }, drop] = useDrop(() => ({\n        accept: ItemTypes.TILE,\n        drop: (item, monitor) => {\n          swapTile(item.id, props.id)\n        },\n        collect: monitor => ({\n          isOver: !!monitor.isOver(),\n        }),\n      }), [props.x, props.y])\n\n    return (\n      <Box\n        sx={{\n          width: `${SQUARE_SIZE}px`,\n          height: `${SQUARE_SIZE}px`,\n          background: \"#FFA987\",\n          cursor: \"move\",\n          borderRadius: \"5px\"\n        }}\n        ref={(node) => drag(drop(node))}\n      >\n        <Typography variant=\"h3\" sx={{\n          position: \"relative\",\n          color: \"#222\",\n          height: 1,\n          fontSize: \"2.5rem\",\n          lineHeight: `${SQUARE_SIZE}px`,\n          textAlign: \"center\",\n          fontWeight: 700,\n        }}>\n          {props.letter}\n        </Typography>  \n      </Box>\n    );\n  }\n  \n  export default Tile;","import React from \"react\";\nimport { Box } from \"@mui/material\";\nimport { ItemTypes } from '../constants'\nimport { useDrop } from 'react-dnd'\nimport { moveTile } from \"../GameState\";\n\nconst SQUARE_SIZE = 70;\n\nconst TileBenchSquare = (props) => {\n  const [{ isOver }, drop] = useDrop(() => ({\n    accept: ItemTypes.TILE,\n    drop: (item, monitor) => {\n      console.log(\"Dropped items props\", item)\n      moveTile(props.x, props.y, item)\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver(),\n    }),\n  }), [props.x, props.y])\n\n  let style = {\n    width: `${SQUARE_SIZE}px`,\n    height: `${SQUARE_SIZE}px`,\n    backgroundColor: \"#444140\",\n    boxShadow: \"inset 0px 0px 0px 1px #F4E5E1\",\n  }\n  if (isOver) {\n    style.background = \"rgb(87, 155, 87)\"\n  }\n\n  return <Box\n    sx={style}\n    ref={drop}\n  />\n\n}\n  \n  export default TileBenchSquare;","import React from \"react\";\nimport utils from '../utils';\nimport TileNew from \"./Tile\";\nimport BoardSquareNew from \"./Square\";\nimport { Stack } from '@mui/material';\n\nconst BOARD_WIDTH = 10;\nconst BOARD_HEIGHT = 10;\n\nclass Board extends React.Component {\n\n  renderBoardSquares(tiles) {\n    const matrix = Array.matrix(BOARD_WIDTH, BOARD_HEIGHT);\n\n    let squares = []\n\n    matrix.map((row, rowIndex) => {\n      let tempRow = []\n\n      row.map(index => {\n\n        let element = <BoardSquareNew\n          x={index}W\n          y={rowIndex+1}\n          key={`tile-bench-${index}${rowIndex}`}\n        />\n\n        tiles.forEach(tile => {\n          if (tile.x === index && tile.y === rowIndex+1) {\n            element = <TileNew key={tile.id} {...tile} />\n          }\n        })\n        tempRow.push(element)\n      })\n      squares.push(\n      <Stack spacing={0} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n          {tempRow}\n      </Stack>\n      )\n    })\n    return squares;\n  };\n\n  render() {\n    return this.renderBoardSquares(this.props.tiles)\n  }\n}\n\nexport default Board;","import React from \"react\";\nimport TileNew from \"./Tile\";\nimport TileBenchSquareNew from \"./Square\";\nimport Stack from '@mui/material/Stack';\n\nconst BOARD_WIDTH = 12;\nconst BOARD_HEIGHT = 1;\n\nclass TileBench extends React.Component {\n\n  renderBoardSquares(tiles) {\n    const matrix = Array.matrix(BOARD_WIDTH, BOARD_HEIGHT);\n\n    let squares = []\n\n    matrix.map((row, rowIndex) => {\n      let tempRow = []\n\n      row.map(index => {\n\n        let element = <TileBenchSquareNew\n          x={index}\n          y={rowIndex}\n          key={`tile-bench-${index}${rowIndex}`}\n        />\n\n        tiles.forEach(tile => {\n          if (tile.x === index && tile.y === rowIndex) {\n            element = <TileNew key={tile.id} {...tile} />\n          }\n        })\n        tempRow.push(element)\n      })\n      squares.push(\n      <Stack spacing={1} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n          {tempRow}\n      </Stack>\n      )\n    })\n    return squares;\n  };\n\n  render() {\n    return this.renderBoardSquares(this.props.tiles)\n  }\n}\n\nexport default TileBench;","import React from \"react\";\nimport { Container } from \"@mui/material\";\nimport Board from \"./Board\";\nimport TileBench from \"./TileBench\";\n\nclass GameArea extends React.Component {\n\n  render() {\n    return (\n      <>\n        <Container disableGutters maxWidth=\"lg\" component=\"main\" sx={{ pt: 5, pb: 5 }}>\n          <Board tiles={this.props.tiles}/>\n        </Container>\n        <Container disableGutters maxWidth=\"lg\" component=\"main\" sx={{ pt: 5, pb: 6 }}>\n          <TileBench tiles={this.props.tiles}/>  \n        </Container>\n      </>\n    );\n  }\n}\n  \n  export default GameArea;","import GitHubIcon from '@mui/icons-material/GitHub';\nimport { Typography } from '@mui/material/';\n\nconst GithubFooter = () => {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n        <GitHubIcon \n        onClick={event =>  window.open('https://github.com/ESattler/qless/', '_blank')}\n        sx={{\n          fontSize: 50,\n          '&:hover': {\n            opacity: 0.5\n          }\n        }} />\n    </Typography>\n  );\n}\n\nexport default GithubFooter;","import { Grid, Box, Modal } from '@mui/material'\n\nconst ValidationModal = (props) => { \n\n  return (\n    <Modal\n      open={props.open}\n      onClose={props.handleClose}\n      BackdropProps={{ style: { backgroundColor: \"rgba(255,255,255,0.6)\" } }} \n    >\n      <Box justify=\"center\" alignContent=\"center\" alignItems=\"center\" sx={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        border: '2px solid #000',\n        p: 4\n      }}>\n        <Grid container justify=\"center\" alignContent=\"center\" xs={12} spacing={3}>\n          {props.foundWordsDivs}\n        </Grid>\n      </Box>\n    </Modal>\n  )\n}\n\nexport default ValidationModal","import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, CssBaseline, Typography, Container, GlobalStyles, IconButton } from '@mui/material'\nimport CloseIcon from '@mui/icons-material/Close';\nimport CheckIcon from '@mui/icons-material/Check';\nimport { areAllConnected, getAllWords, observe, resetTile } from \"../GameState\";\nimport { generateRandomLetters } from \"../GameState\";\nimport Words from '../words.json'\nimport GameAreaNew from \"../components/GameArea\";\nimport GithubFooter from \"../components/GithubFooter\";\nimport ValidationModal from \"../components/ValidationModal\";\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\n\n\nfunction randomize(setTiles, setFoundWords) {\n  let newLetters = generateRandomLetters()\n\n  for (let i = 0; i < setTiles.length; i++) {\n    let newTile = {\n      x: i,\n      y: 0,\n      letter: newLetters[i],\n      id: `${i}`\n    }\n\n    setTiles[i](newTile)\n    resetTile(i, newTile)\n    setFoundWords([])\n  }\n}\n\nfunction validate(tiles, setFoundWords, handleClickOpen, setValidationError) {\n  let anyStartingSpot = Object.values(tiles).some(tile => tile.y === 0)\n  if (anyStartingSpot) {\n    alert(\"NOT ALL ON BOARD\")\n    return;\n  }\n\n  let allConnected = areAllConnected(tiles)\n  if (!allConnected) {\n    alert(\"NOT ALL CONNECTED\")\n    return;\n  }\n\n  const words = getAllWords(tiles)\n  let checkedWords = []\n  words.forEach(word => {\n    console.log(`${word} | ${Words.hasOwnProperty(word)}`)\n    checkedWords.push({\n      word: word,\n      valid: Words.hasOwnProperty(word)\n    })\n  })\n\n  setFoundWords(checkedWords)\n  handleClickOpen()\n}\n\nconst GameView = (props) => {\n\n  const [tile1, setTile1] = useState({x: 0, y: 0, letter: props.letters[0], id: \"0\"});\n  useEffect(() => observe((newPos) => setTile1(newPos), tile1));\n\n  const [tile2, setTile2] = useState({x: 1, y: 0, letter: props.letters[1], id: \"1\"});\n  useEffect(() => observe((newPos) => setTile2(newPos), tile2));\n\n  const [tile3, setTile3] = useState({x: 2, y: 0, letter: props.letters[2], id: \"2\"});\n  useEffect(() => observe((newPos) => setTile3(newPos), tile3));\n\n  const [tile4, setTile4] = useState({x: 3, y: 0, letter: props.letters[3], id: \"3\"});\n  useEffect(() => observe((newPos) => setTile4(newPos), tile4));\n\n  const [tile5, setTile5] = useState({x: 4, y: 0, letter: props.letters[4], id: \"4\"});\n  useEffect(() => observe((newPos) => setTile5(newPos), tile5));\n\n  const [tile6, setTile6] = useState({x: 5, y: 0, letter: props.letters[5], id: \"5\"});\n  useEffect(() => observe((newPos) => setTile6(newPos), tile6));\n\n  const [tile7, setTile7] = useState({x: 6, y: 0, letter: props.letters[6], id: \"6\"});\n  useEffect(() => observe((newPos) => setTile7(newPos), tile7));\n\n  const [tile8, setTile8] = useState({x: 7, y: 0, letter: props.letters[7], id: \"7\"});\n  useEffect(() => observe((newPos) => setTile8(newPos), tile8));\n\n  const [tile9, setTile9] = useState({x: 8, y: 0, letter: props.letters[8], id: \"8\"});\n  useEffect(() => observe((newPos) => setTile9(newPos), tile9));\n\n  const [tile10, setTile10] = useState({x: 9, y: 0, letter: props.letters[9], id: \"9\"});\n  useEffect(() => observe((newPos) => setTile10(newPos), tile10));\n\n  const [tile11, setTile11] = useState({x: 10, y: 0, letter: props.letters[10], id: \"10\"});\n  useEffect(() => observe((newPos) => setTile11(newPos), tile11));\n\n  const [tile12, setTile12] = useState({x: 11, y: 0, letter: props.letters[11], id: \"11\"});\n  useEffect(() => observe((newPos) => setTile12(newPos), tile12));\n\n  let tiles = [tile1, tile2, tile3, tile4, tile5, tile6, tile7, tile8, tile9, tile10, tile11, tile12]\n  let setTiles = [setTile1, setTile2, setTile3, setTile4, setTile5, setTile6, setTile7, setTile8, setTile9, setTile10, setTile11, setTile12]\n\n  const [open, setOpen] = React.useState(false);\n  const [foundWords, setFoundWords] = useState([]);\n  const [error, setValidationError] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setValidationError(false)\n    setOpen(false);\n  };\n\n  let foundWordsDivs = []\n  for (let word of foundWords) {\n    foundWordsDivs.push(\n      <Grid container justifyContent=\"center\"item xs={6}>\n        { word.valid &&\n          <CheckIcon color=\"success\" />\n        }\n        { !word.valid &&\n          <CloseIcon color=\"error\" />\n        } {word.word}\n      </Grid>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      <GlobalStyles styles={{ ul: { margin: 0, padding: 0, listStyle: 'none', }}} />\n      <CssBaseline />\n      <Container\n        maxWidth=\"xs\"\n        component=\"header\"\n        sx={{\n          borderBottom: (theme) => `1px solid #555a5e`,\n          pb: 0\n        }}\n      >\n        <Grid container maxWidth=\"sm\" justifyContent=\"center\">\n          <Grid container item md={2} justifyContent=\"flex-end\" alignItems=\"flex-end\">\n              <IconButton aria-label=\"delete\" size=\"large\">\n                <HelpOutlineIcon fontSize=\"inherit\" sx={{ fontSize: \"40px\"}}/>\n              </IconButton>\n          </Grid>\n          <Grid container item md={5} justifyContent=\"center\">\n            <Typography variant=\"h3\" color=\"inherit\" align=\"center\" noWrap>\n              QLESS\n            </Typography>\n          </Grid>\n          <Grid container item md={2} justifyContent=\"flex-start\" alignItems=\"flex-start\">\n            <IconButton aria-label=\"delete\" size=\"large\">\n              <SettingsIcon fontSize=\"inherit\" sx={{ fontSize: \"40px\"}}/>\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <Container disableGutters maxWidth=\"md\" component=\"main\" sx={{ pt: 0, pb: 0 }}>\n        <GameAreaNew tiles={tiles} />\n      </Container>\n      <Container disableGutters maxWidth=\"xs\" component=\"main\" justifyContent=\"center\">\n        <Grid container maxWidth=\"sm\">\n          <Grid container item md={6} justifyContent=\"center\">\n            <Button variant=\"contained\" sx={{backgroundColor: \"#E54B4B\"}} onClick={() => randomize(setTiles, setFoundWords)}>Randomize</Button>\n          </Grid>\n          <Grid container item md={6} justifyContent=\"center\">\n            <Button variant=\"contained\" sx={{backgroundColor: \"#FFA987\"}} onClick={() => validate(tiles, setFoundWords, handleClickOpen, setValidationError)}>Validate</Button>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <Container\n        maxWidth=\"md\"\n        component=\"footer\"\n        sx={{\n          borderTop: (theme) => `1px solid #555a5e`,\n          mt: 8,\n          py: [3, 6],\n        }}\n      >\n        <GithubFooter sx={{ mt: 5 }} />\n      </Container>\n      <ValidationModal open={open} handleClose={handleClose} foundWordsDivs={foundWordsDivs} />\n\n    </React.Fragment>\n  )\n}\n\nexport default GameView;","import { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { generateRandomLetters } from '../GameState';\nimport GameViewNew from './GameView';\n\nconst AppView = () => {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <GameViewNew letters={generateRandomLetters()}/>\n    </DndProvider>\n  )\n}\n\nexport default AppView","import {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n} from \"react-router-dom\";\nimport AppView from './views/AppView';\n\nfunction App() {\n\n  console.log(\"Rerender App\")\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<AppView />} />\n        <Route path=\"*\" element={<AppView />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nif(module.hot){\n  module.hot.accept()\n}\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}